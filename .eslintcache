[{"C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\index.js":"1","C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\App.js":"2","C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\pages\\checkBalance\\checkBalance.js":"3","C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\pages\\paymentHistory\\index.js":"4","C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\pages\\LoginForm\\index.js":"5","C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\pages\\admin\\index.js":"6","C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\pages\\myTran\\index.js":"7","C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\pages\\registrationForm\\index.js":"8","C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\layouts\\mainLay\\index.js":"9","C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\pages\\DeleteUserPage\\index.js":"10","C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\pages\\Homepage\\index.js":"11","C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\pages\\userTrans\\index.js":"12","C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\pages\\AdminDepositHis\\index.js":"13","C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\layouts\\HomeLay\\index.js":"14","C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\pages\\checkAttendance\\index.js":"15","C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\pages\\userDetailsPage\\index.js":"16","C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\pages\\updateUserPage\\index.js":"17","C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\pages\\deposit\\index.js":"18","C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\layouts\\adminLay\\index.js":"19","C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\components\\dashboard\\index.js":"20","C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\pages\\transactionHistory\\index.js":"21","C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\layouts\\studentLay\\index.js":"22","C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\components\\userDeposit\\index.js":"23","C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\components\\admin\\admin.js":"24","C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\components\\checkBalance\\index.js":"25","C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\components\\paymentHistory\\index.js":"26","C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\config\\config.js":"27","C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\components\\footer\\index.js":"28","C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\components\\deleteUser\\index.js":"29","C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\components\\checkAttendance\\index.js":"30","C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\components\\login\\index.js":"31","C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\components\\myTran\\index.js":"32","C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\components\\registration\\index.js":"33","C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\components\\userTransaction\\index.js":"34","C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\components\\adminDepositHis\\index.js":"35","C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\components\\userDetails\\index.js":"36","C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\components\\Home\\index.js":"37","C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\components\\View\\index.js":"38","C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\components\\header\\index.js":"39","C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\components\\deposit\\index.js":"40","C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\components\\updateUser\\index.js":"41","C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\components\\transactionHistory\\index.js":"42","C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\components\\forms\\FornInput\\formInput.js":"43","C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\components\\deposit\\error.js":"44","C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\components\\deposit\\errorSucc.js":"45","C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\components\\formWrapper\\index.js":"46","C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\components\\modal\\index.js":"47","C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\components\\forms\\Buttons\\index.js":"48","C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\components\\popup\\index.js":"49","C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\components\\profile\\index.js":"50","C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\components\\forms\\FormSelect\\index.js":"51","C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\redux\\store.js":"52","C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\redux\\rootReducer.js":"53","C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\redux\\users\\userReducers.js":"54","C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\redux\\users\\userTypes.js":"55","C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\redux\\users\\userActions.js":"56","C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\redux\\helpers\\history.js":"57","C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\redux\\users\\userService.js":"58","C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\redux\\helpers\\userdata.js":"59","C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\redux\\admin\\adminReducers.js":"60","C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\redux\\admin\\adminTypes.js":"61","C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\redux\\admin\\adminActions.js":"62","C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\redux\\admin\\adminService.js":"63"},{"size":796,"mtime":1643548916370,"results":"64","hashOfConfig":"65"},{"size":3676,"mtime":1644926146169,"results":"66","hashOfConfig":"65"},{"size":226,"mtime":1625846882468,"results":"67","hashOfConfig":"65"},{"size":238,"mtime":1625846883043,"results":"68","hashOfConfig":"65"},{"size":207,"mtime":1625846882108,"results":"69","hashOfConfig":"65"},{"size":218,"mtime":1625846882468,"results":"70","hashOfConfig":"65"},{"size":218,"mtime":1625846883043,"results":"71","hashOfConfig":"65"},{"size":240,"mtime":1625846884004,"results":"72","hashOfConfig":"65"},{"size":512,"mtime":1645015129956,"results":"73","hashOfConfig":"65"},{"size":232,"mtime":1625846880887,"results":"74","hashOfConfig":"65"},{"size":229,"mtime":1625846881262,"results":"75","hashOfConfig":"65"},{"size":184,"mtime":1625846884019,"results":"76","hashOfConfig":"65"},{"size":192,"mtime":1625846880887,"results":"77","hashOfConfig":"65"},{"size":374,"mtime":1645437564874,"results":"78","hashOfConfig":"65"},{"size":254,"mtime":1625846882468,"results":"79","hashOfConfig":"65"},{"size":184,"mtime":1625905415604,"results":"80","hashOfConfig":"65"},{"size":179,"mtime":1625846884019,"results":"81","hashOfConfig":"65"},{"size":220,"mtime":1625846882838,"results":"82","hashOfConfig":"65"},{"size":2591,"mtime":1645011681873,"results":"83","hashOfConfig":"65"},{"size":208,"mtime":1625846872898,"results":"84","hashOfConfig":"65"},{"size":253,"mtime":1625846884004,"results":"85","hashOfConfig":"65"},{"size":1436,"mtime":1645011681974,"results":"86","hashOfConfig":"65"},{"size":2966,"mtime":1644857669270,"results":"87","hashOfConfig":"65"},{"size":884,"mtime":1625846872832,"results":"88","hashOfConfig":"65"},{"size":421,"mtime":1644717989670,"results":"89","hashOfConfig":"65"},{"size":4161,"mtime":1644847318852,"results":"90","hashOfConfig":"65"},{"size":137,"mtime":1629225423994,"results":"91","hashOfConfig":"65"},{"size":494,"mtime":1645016199255,"results":"92","hashOfConfig":"65"},{"size":1593,"mtime":1644716409844,"results":"93","hashOfConfig":"65"},{"size":331,"mtime":1625846872890,"results":"94","hashOfConfig":"65"},{"size":1936,"mtime":1645012190994,"results":"95","hashOfConfig":"65"},{"size":3892,"mtime":1644847318980,"results":"96","hashOfConfig":"65"},{"size":12791,"mtime":1644846462693,"results":"97","hashOfConfig":"65"},{"size":3113,"mtime":1644857669172,"results":"98","hashOfConfig":"65"},{"size":3522,"mtime":1644847550443,"results":"99","hashOfConfig":"65"},{"size":3931,"mtime":1625907951053,"results":"100","hashOfConfig":"65"},{"size":2235,"mtime":1645443491077,"results":"101","hashOfConfig":"65"},{"size":330,"mtime":1625846872771,"results":"102","hashOfConfig":"65"},{"size":3305,"mtime":1645439385183,"results":"103","hashOfConfig":"65"},{"size":6967,"mtime":1644632910132,"results":"104","hashOfConfig":"65"},{"size":3997,"mtime":1644857151477,"results":"105","hashOfConfig":"65"},{"size":4936,"mtime":1644848059398,"results":"106","hashOfConfig":"65"},{"size":431,"mtime":1625846874948,"results":"107","hashOfConfig":"65"},{"size":206,"mtime":1625846873170,"results":"108","hashOfConfig":"65"},{"size":213,"mtime":1625846873170,"results":"109","hashOfConfig":"65"},{"size":426,"mtime":1625846874277,"results":"110","hashOfConfig":"65"},{"size":447,"mtime":1625846875230,"results":"111","hashOfConfig":"65"},{"size":231,"mtime":1625846874917,"results":"112","hashOfConfig":"65"},{"size":353,"mtime":1625846875963,"results":"113","hashOfConfig":"65"},{"size":1214,"mtime":1645093071932,"results":"114","hashOfConfig":"65"},{"size":881,"mtime":1625846874917,"results":"115","hashOfConfig":"65"},{"size":322,"mtime":1644418173166,"results":"116","hashOfConfig":"65"},{"size":264,"mtime":1644624127288,"results":"117","hashOfConfig":"65"},{"size":1047,"mtime":1644857669270,"results":"118","hashOfConfig":"65"},{"size":394,"mtime":1644717041854,"results":"119","hashOfConfig":"65"},{"size":2210,"mtime":1644857669172,"results":"120","hashOfConfig":"65"},{"size":98,"mtime":1643625141182,"results":"121","hashOfConfig":"65"},{"size":2526,"mtime":1644825011050,"results":"122","hashOfConfig":"65"},{"size":267,"mtime":1644251542554,"results":"123","hashOfConfig":"65"},{"size":2267,"mtime":1644847318978,"results":"124","hashOfConfig":"65"},{"size":596,"mtime":1644714097639,"results":"125","hashOfConfig":"65"},{"size":5141,"mtime":1644846768228,"results":"126","hashOfConfig":"65"},{"size":3986,"mtime":1644715795793,"results":"127","hashOfConfig":"65"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},"gtkbsl",{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"130"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"130"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"130"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"130"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"130"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"130"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"130"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"130"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"130"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"216","messages":"217","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"130"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"130"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"130"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"130"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},"C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\index.js",[],["270","271"],"C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\App.js",[],"C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\pages\\checkBalance\\checkBalance.js",[],"C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\pages\\paymentHistory\\index.js",[],"C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\pages\\LoginForm\\index.js",[],"C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\pages\\admin\\index.js",[],"C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\pages\\myTran\\index.js",[],"C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\pages\\registrationForm\\index.js",[],"C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\layouts\\mainLay\\index.js",[],"C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\pages\\DeleteUserPage\\index.js",[],"C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\pages\\Homepage\\index.js",[],"C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\pages\\userTrans\\index.js",[],"C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\pages\\AdminDepositHis\\index.js",[],"C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\layouts\\HomeLay\\index.js",["272"],"C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\pages\\checkAttendance\\index.js",[],"C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\pages\\userDetailsPage\\index.js",[],"C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\pages\\updateUserPage\\index.js",[],"C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\pages\\deposit\\index.js",[],"C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\layouts\\adminLay\\index.js",["273"],"import React from 'react';\r\nimport Header from './../../components/header'\r\nimport Footer from './../../components/footer'\r\nimport View from './../../components/View'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst AdminLay =(props)=> {\r\n    \r\n\r\n    return (\r\n        <div style={{background: \"white\"}} className=\"tacAdminLay\">\r\n            <Header {...props} />\r\n            <div className=\"tacControl\">\r\n                <div className=\"controlLay\">\r\n                    <View>\r\n                        <ul>\r\n                            <li>\r\n                                <Link to=\"/deposit\">\r\n                                    Deposit/ Balance\r\n                                </Link>\r\n                            </li>\r\n                            \r\n                            <li>\r\n                                <Link to=\"/usertransaction\">\r\n                                    User Transaction History\r\n                                </Link>\r\n                            </li>\r\n                            <li>\r\n                                <Link to=\"/deposithistory\">\r\n                                    User Deposit History\r\n                                </Link>\r\n                            </li>\r\n                            <li>\r\n                                <Link to=\"/transaction\">\r\n                                    All Transaction History\r\n                                </Link>\r\n                            </li>\r\n                            <li>\r\n                                <Link to=\"/payment\">\r\n                                    All Payment History\r\n                                </Link>\r\n                            </li>\r\n                            <li>\r\n                                <Link to=\"/register\">\r\n                                    Students\r\n                                </Link>\r\n                            </li>\r\n                            {/* <li>\r\n                                <Link to=\"/userdetails\">\r\n                                    User Details\r\n                                </Link>\r\n                            </li> */}\r\n                            <li>\r\n                                <Link to=\"/delete\">\r\n                                    Delete User\r\n                                </Link>\r\n                            </li>\r\n                        </ul>\r\n                    </View>\r\n                </div>\r\n                <div className=\"layerContent\">\r\n                    {props.children}\r\n                </div>\r\n            </div>\r\n            {/* <Footer /> */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AdminLay;","C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\components\\dashboard\\index.js",[],"C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\pages\\transactionHistory\\index.js",[],"C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\layouts\\studentLay\\index.js",[],"C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\components\\userDeposit\\index.js",["274","275"],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { APPCONFIG} from './../../config/config'\r\nimport {\r\n    TableContainer, Table, TableHead,\r\n    TableRow, TableBody, TableCell\r\n  } from '@material-ui/core';\r\n  import Paper from '@material-ui/core/Paper';\r\nimport './index.scss'\r\n\r\n\r\nconst DepositHistory =()=> {\r\n    //const history = useHistory();\r\n    const [deposit, setDeposit] = useState([])\r\n    const [userDeposit, setUserDeposit] = useState({})\r\n\r\n    useEffect(() => {\r\n        fetchDepositHistory()\r\n    }, []);\r\n\r\n    const fetchDepositHistory =()=> {\r\n        let data = localStorage.getItem('userdata')\r\n\r\n        if (!data) {\r\n            \r\n        }\r\n        else{\r\n            data=JSON.parse(data);\r\n            //history.push('/admin')\r\n           \r\n        setUserDeposit(data);\r\n        }\r\n        axios.get(`${APPCONFIG.appapi}/userdeposit?id=${data.id}`)\r\n        .then((data)=> {\r\n            setDeposit(data.data)\r\n        })\r\n        .catch((error)=> {\r\n            console.log(error)\r\n        })\r\n    \r\n    }\r\n\r\n      const stylesHead = {\r\n        fontSize: '20px',\r\n        cursor: 'pointer',\r\n        width: '15%',\r\n        fontWeight: '500',\r\n        textTransform: 'uppercase',\r\n        padding: '4px 4px'\r\n      };\r\n\r\n      const stylesBody = {\r\n        fontSize: '15px',\r\n        cursor: 'pointer',\r\n        width: '15%',\r\n        fontWeight: '400',\r\n        padding: '4px 4px'\r\n      };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Deposit History</h2>\r\n            <div>\r\n                <TableContainer component={Paper}>\r\n                <Table id=\"table-to-xls\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell style={stylesHead}># </TableCell>\r\n                            <TableCell style={stylesHead}>Amount </TableCell>\r\n                            <TableCell style={stylesHead}>Date </TableCell>\r\n                            <TableCell style={stylesHead}>Location </TableCell>\r\n                            {/* <TableCell style={stylesHead}>Action </TableCell> */}\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                    \r\n                        {deposit.map && deposit.map((data, i)=> (\r\n                            \r\n                            <TableRow className=\"linkss\" key={i}>\r\n                                <TableCell style={stylesBody}>{i + 1}</TableCell>\r\n                                <TableCell style={stylesBody}>{data.money}</TableCell>\r\n                                <TableCell style={stylesBody}>{data.date}</TableCell>\r\n                                <TableCell style={stylesBody}>{data.comment}</TableCell>\r\n                                {/* <TableCell style={stylesBody}><TableButton onClick={()=>{\r\n                                                handleClick(data.id)\r\n                                }}> Edit</TableButton> </TableCell> */}\r\n                            </TableRow>\r\n                           \r\n                        ))}\r\n                        \r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n                </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DepositHistory;","C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\components\\admin\\admin.js",[],"C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\components\\checkBalance\\index.js",[],"C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\components\\paymentHistory\\index.js",["276","277"],"import React, { useState, useEffect} from 'react'\r\nimport './index.scss'\r\nimport { Helmet } from 'react-helmet'\r\nimport {\r\n    TableContainer, Table, TableHead,\r\n    TableRow, TableBody, TableCell, Paper\r\n  } from '@material-ui/core';\r\nimport moment from 'moment';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FormInput from './../forms/FornInput/formInput';\r\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\r\nimport { fetchAllPayHis } from '../../redux/admin/adminActions';\r\n\r\nconst PaymentHistory =()=> {\r\n\r\n    const [trans, setTrans ] = useState([]);\r\n    const [search, setSearch] = useState(\"\");\r\n    \r\n    const user = useSelector(state=> state.admin.data)\r\n    const loading = useSelector(state=> state.admin.loading)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(()=> {\r\n        dispatch(fetchAllPayHis())\r\n    },[])\r\n\r\n      const stylesHead = {\r\n        fontSize: '20px',\r\n        cursor: 'pointer',\r\n        width: '15%',\r\n        fontWeight: '500',\r\n        textTransform: 'uppercase',\r\n        padding: '4px 4px'\r\n      };\r\n\r\n      const stylesBody = {\r\n        fontSize: '15px',\r\n        cursor: 'pointer',\r\n        width: '15%',\r\n        fontWeight: '400',\r\n        padding: '4px 4px'\r\n      };\r\n\r\n      const handleChange = event => {\r\n        setSearch(event.target.value);\r\n      };\r\n      useEffect(() => {\r\n        getCharacter()\r\n        if (search && search.length > 1) {\r\n            if (search.length % 2 === 0) {\r\n                getCharacter();\r\n            } \r\n        } \r\n      }, [search]);\r\n\r\n      const getCharacter =()=> {\r\n        const results = trans.filter( trans =>\r\n            trans.date.toLowerCase().includes(search.toLowerCase()) || \r\n            trans.id.toLowerCase().includes(search.toLowerCase())\r\n          );\r\n          setTrans(results);\r\n      }\r\n\r\n    return (\r\n        <div>\r\n            <Helmet>\r\n                <title>TAS Smart Card | Payment History</title>\r\n            </Helmet>\r\n            <h1>\r\n                Payment History\r\n            </h1>\r\n                <ReactHTMLTableToExcel\r\n                    id=\"test-table-xls-button\"\r\n                    className=\"download-table-xls-button\"\r\n                    table=\"table-to-xls\"\r\n                    filename=\"Payment History XLS\"\r\n                    sheet=\"tablexls\"\r\n                    buttonText=\"Download as XLS\"/>\r\n            <div>\r\n                <FormInput\r\n                name=\"search\"\r\n                value={search || \"\"}\r\n                placeholder=\"Search Bar\"\r\n                handleChange={handleChange}\r\n                />\r\n            </div>\r\n\r\n            <div>\r\n               \r\n            <TableContainer component={Paper}>\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell style={stylesHead}>ID</TableCell>\r\n                                <TableCell style={stylesHead}>Amount</TableCell>\r\n                                <TableCell style={stylesHead}>Date</TableCell>\r\n                                <TableCell style={stylesHead}>Comment</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                        {loading && <em>Loading Payment History...</em>}\r\n                            {user.map && user.map((data, i) => {\r\n                             return (\r\n                                <TableRow key={i}>\r\n                                    <TableCell style={stylesBody}>{data.id}</TableCell>\r\n                                    <TableCell style={stylesBody}>{data.money}</TableCell>\r\n                                    <TableCell style={stylesBody}>{moment(data.date).format('DD/MM/YYYY')}</TableCell>\r\n                                    <TableCell style={stylesBody}>{data.comment}</TableCell>\r\n                                </TableRow>\r\n                            )})}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n          \r\n            </div>\r\n        </div>\r\n    );\r\n    \r\n}\r\n\r\nexport default PaymentHistory;","C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\config\\config.js",[],"C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\components\\footer\\index.js",[],"C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\components\\deleteUser\\index.js",["278"],"import React, {useEffect, useState} from 'react'\r\nimport Button from '../forms/Buttons'\r\nimport FormInput from '../forms/FornInput/formInput'\r\nimport FormWrapper from '../formWrapper'\r\nimport { Helmet } from 'react-helmet'\r\nimport { useDispatch } from 'react-redux'\r\nimport './index.scss'\r\nimport { fetchDelete } from '../../redux/admin/adminActions';\r\n\r\nconst DeleteUser =()=> {\r\n\r\n    const [deleteUser, setDeleteUser] = useState(\"\");\r\n    const dispatch = useDispatch()\r\n    \r\n    const configWrapper = {\r\n        head : 'Delete User'\r\n    }\r\n\r\n    const handleSubmit =(event) => {\r\n        event.preventDefault();\r\n        if(deleteUser) {\r\n            dispatch(fetchDelete(deleteUser))\r\n            reset();\r\n        }\r\n    }\r\n\r\n    const reset =()=> {\r\n        setDeleteUser('')\r\n    }\r\n    return (\r\n        <div>\r\n            <Helmet>\r\n                  <title>TAS Smart Card | Delete User</title>\r\n               </Helmet>\r\n            <h2>Delete Student</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <FormWrapper {...configWrapper}>\r\n                    <FormInput \r\n                    type=\"text\"\r\n                    name=\"delete\"\r\n                    value={deleteUser}\r\n                    placeholder=\"Enter Student ID\"\r\n                    handleChange={e => setDeleteUser(e.target.value) }\r\n                    />\r\n\r\n                    <Button type=\"submit\">\r\n                        Delete User\r\n                    </Button>\r\n                </FormWrapper>\r\n            </form>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DeleteUser;\r\n\r\n","C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\components\\checkAttendance\\index.js",[],"C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\components\\login\\index.js",["279"],"import React, { useState } from 'react';\r\nimport FormInput from './../forms/FornInput/formInput'\r\nimport Button from './../forms/Buttons'\r\nimport FormWrapper from './../formWrapper'\r\nimport PropTypes from 'prop-types'\r\nimport { useDispatch} from 'react-redux'\r\nimport './index.scss'\r\nimport { fetchUser } from '../../redux/users/userActions';\r\n\r\n\r\nconst Login =()=> {\r\n    const dispatch = useDispatch();\r\n\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [loginMessage, setLoginMessage] = useState('');\r\n\r\n    const handleSubmitForm = event => {\r\n        event.preventDefault();\r\n        if (username && password) {\r\n            dispatch(fetchUser(username, password))\r\n        }\r\n    }\r\n\r\n    const configWrap = {\r\n        head: 'Login Here'\r\n    }\r\n\r\n    return (\r\n\r\n        <div style={{height: '70vh'}} className=\"formWrap\">\r\n    \r\n            <FormWrapper {...configWrap}>\r\n                <form onSubmit={handleSubmitForm}>\r\n                    <h3 style={{color: 'red'}}>{loginMessage}</h3>\r\n                    <FormInput \r\n                        type=\"text\"\r\n                        name=\"id\"\r\n                        value={username}\r\n                        placeholder=\"ID\"\r\n                        handleChange={e => setUsername(e.target.value)}\r\n                        />\r\n                    <FormInput\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        value={password}\r\n                        placeholder=\"Password\"\r\n                        handleChange={e => setPassword(e.target.value)}\r\n                    />\r\n\r\n                    <Button type=\"submit\">\r\n                        LogIn\r\n                    </Button>\r\n\r\n                </form>\r\n            </FormWrapper>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Login\r\n\r\nLogin.propTypes = {\r\n    setToken: PropTypes.func.isRequired\r\n}","C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\components\\myTran\\index.js",[],"C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\components\\registration\\index.js",["280","281","282","283","284"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport FormInput from './../forms/FornInput/formInput'\r\nimport Button from './../forms/Buttons'\r\nimport './index.scss'\r\nimport FormWrapper from '../formWrapper';\r\nimport {APPCONFIG} from './../../config/config';\r\nimport {\r\n    TableContainer, Table, TableHead,\r\n    TableRow, TableBody, TableCell, Paper\r\n  } from '@material-ui/core';\r\nimport Modal from './../modal'\r\nimport { Helmet } from 'react-helmet';\r\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\r\nimport FormSelect from '../forms/FormSelect';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchAllStudents, postRegister } from '../../redux/admin/adminActions';\r\n\r\nconst Registration =(props)=> {\r\n\r\n    const [tagid, setTagid] = useState(\"\")\r\n    const [firstName, setFirstName] = useState(\"\")\r\n    const [surName, setSurname] = useState(\"\");\r\n    const [pin, setPin] = useState(\"\");\r\n    const [money, setMoney] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\");\r\n    const [active, setActive] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\");\r\n    const [search, setSearch] = useState(\"\");\r\n\r\n    const [errors, setErrors] = useState([]);\r\n    const [students, setStudents] = useState([]);\r\n    \r\n\r\n    const dispatch = useDispatch();\r\n    const data = useSelector(state=> state.admin.data)\r\n    const loading = useSelector(state=> state.admin.loading)\r\n\r\n    const [hideModal, setHideModal] = useState(true);\r\n\r\n    const toggleModal =()=> setHideModal(!hideModal);\r\n    const history = useHistory();\r\n\r\n    const configModal = {\r\n        hideModal,\r\n        toggleModal\r\n    }\r\n\r\n    let oldlist = students.map(students => {\r\n        return {tagid: students.tagid, firstName: students.fname, total: students.transactionno,\r\n            surName: students.lname, pin: students.pin, money: students.money, \r\n            password: students.password, active: students.active, email: students.email};\r\n    });\r\n\r\n    const handleClick =(id)=> {\r\n        history.push('/updateuser/'+id)\r\n    }\r\n\r\n      const stylesHead = {\r\n        fontSize: '15px',\r\n        cursor: 'pointer',\r\n        width: '15%',\r\n        fontWeight: 'bold',\r\n        textTransform: 'uppercase',\r\n        padding: '4px 4px'\r\n      };\r\n\r\n      const stylesBody = {\r\n        fontSize: '13px',\r\n        cursor: 'pointer',\r\n        width: '15%',\r\n        fontWeight: '400',\r\n        padding: '4px 4px'\r\n      };\r\n\r\n    const configMod = {\r\n        head: 'New Student Registeration'\r\n    }\r\n    const handleSubmitForm = event => {\r\n        event.preventDefault();\r\n        if (tagid&&firstName&&surName&&pin&&money&&password&&active&&email) {\r\n            dispatch(postRegister(tagid,firstName,surName,pin,money,password,active,email))\r\n            reset()\r\n        }\r\n    }\r\n\r\n    const reset =()=> {\r\n        setTagid('');\r\n        setFirstName('');\r\n        setSurname('');\r\n        setPin('');\r\n        setMoney('');\r\n        setPassword('');\r\n    }\r\n\r\n    useEffect(()=> {\r\n        dispatch(fetchAllStudents())\r\n    },[]);\r\n\r\n    return (\r\n        <div>\r\n            <Helmet>\r\n                  <title>TAS Smart Card | Registration Page</title>\r\n               </Helmet>\r\n               <h1>Students Page</h1>\r\n            <div className=\"reg\">\r\n                <span className=\"reg-span\">\r\n                    <ul>\r\n                        <li>\r\n                            <Button onClick={()=> toggleModal()}>\r\n                                Add new user\r\n                            </Button>\r\n                        </li>\r\n                    </ul>\r\n                </span>\r\n                <span>\r\n                    <ReactHTMLTableToExcel\r\n                    id=\"test-table-xls-button\"\r\n                    className=\"download-table-xls-button\"\r\n                    table=\"table-to-xls\"\r\n                    filename=\"All Users XLS\"\r\n                    sheet=\"tablexls\"\r\n                    buttonText=\"Download as XLS\"/>\r\n                </span>\r\n            </div>\r\n            <div >\r\n                <FormInput\r\n                name=\"search\"\r\n                value={search}\r\n                placeholder=\"Search Bar\"\r\n                handleChange={e => {\r\n                    if (e.target.value) {\r\n                        const filteredTeams = students.filter(students => {\r\n                          return students.fname.toLowerCase().includes(e.target.value.toLowerCase()) ||\r\n                          students.lname.toLowerCase().includes(e.target.value.toLowerCase()) \r\n                        });\r\n                        setStudents(filteredTeams);\r\n                      } else {\r\n                        setStudents(oldlist);\r\n                      }\r\n                      setSearch(e.target.value);\r\n                  }}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Modal {...configModal}>\r\n                <FormWrapper {...configMod}>\r\n                <div className=\"formWrap\">\r\n                    {errors.length > 0 && (\r\n                        <ul>\r\n                            {errors.map((err, index) => {\r\n                                return (\r\n                                    <li key={index}>\r\n                                        {err}\r\n                                    </li>\r\n                                )\r\n                            })}\r\n                        </ul>\r\n                    )}\r\n                    <form onSubmit={handleSubmitForm}>\r\n                        \r\n                        <label>TAG ID</label>\r\n                        <FormInput \r\n                            type=\"text\"\r\n                            name=\"tagid\"\r\n                            value={tagid}\r\n                            placeholder=\"Enter Tag ID\"\r\n                            handleChange={e=> setTagid(e.target.value)}\r\n                        />\r\n                        <label>Surname</label>\r\n                        <FormInput \r\n                            type=\"text\"\r\n                            name=\"surName\"\r\n                            value={surName}\r\n                            placeholder=\"Enter Surname\"\r\n                            handleChange={e=> setSurname(e.target.value)}\r\n                        />\r\n                        <label>Firstname</label>\r\n                        <FormInput \r\n                            type=\"text\"\r\n                            name=\"firstName\"\r\n                            value={firstName}\r\n                            placeholder=\"Enter Firstname\"\r\n                            handleChange={e=> setFirstName(e.target.value)}\r\n                        />\r\n                        <label>Pin: (4 digits) </label>\r\n                        <FormInput \r\n                            type=\"number\"\r\n                            name=\"pin\"\r\n                            value={pin}\r\n                            placeholder=\"Enter Pin\"\r\n                            handleChange={e=> setPin(e.target.value)}\r\n                        />\r\n                        <label>Money</label>\r\n                        <FormInput \r\n                            type=\"text\"\r\n                            name=\"money\"\r\n                            value={money}\r\n                            placeholder=\"Enter Amount\"\r\n                            handleChange={e=> setMoney(e.target.value)}\r\n                        />\r\n                        <label>Password</label>\r\n                        <FormInput\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            value={password}\r\n                            placeholder=\"Enter Password\"\r\n                            handleChange={e => setPassword(e.target.value)}\r\n                        />\r\n                        <label>Active</label>\r\n                        <FormSelect \r\n                            options={[\r\n                                {\r\n                                    value: \"active\",\r\n                                    name: \"active\"\r\n                                },\r\n                                {\r\n                                    value: \"1\",\r\n                                    name: \"1\"\r\n                                },\r\n                                {\r\n                                    value: \"2\",\r\n                                    name: \"2\"\r\n                                }\r\n                            ]}\r\n                            handleChange={e => setActive(e.target.value)}\r\n                        />\r\n                        <label>User</label>\r\n\r\n                        <FormSelect \r\n                            options={[\r\n                                {\r\n                                    value: \"user\",\r\n                                    name: \"user\"\r\n                                },\r\n                                {\r\n                                    value: \"student\",\r\n                                    name: \"Student\"\r\n                                },\r\n                                {\r\n                                    value: \"staff\",\r\n                                    name: \"Staff\"\r\n                                }\r\n                            ]}\r\n                            handleChange={e => setEmail(e.target.value)}\r\n                        />\r\n\r\n                        <Button type=\"submit\">\r\n                            Register\r\n                        </Button>\r\n                    </form>\r\n                </div>\r\n            </FormWrapper>\r\n            </Modal>\r\n        </div>\r\n        <div>\r\n        \r\n        <TableContainer component={Paper}>\r\n                    <Table id=\"table-to-xls\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell style={stylesHead}>ID</TableCell>\r\n                                <TableCell style={stylesHead}>TAG ID</TableCell>\r\n                                <TableCell style={stylesHead}>Firstname</TableCell>\r\n                                <TableCell style={stylesHead}>Lastname</TableCell>\r\n                                <TableCell style={stylesHead}>Pin</TableCell>\r\n                                <TableCell style={stylesHead}>Total Trans</TableCell>\r\n                                <TableCell style={stylesHead}>Balance</TableCell>\r\n                                <TableCell style={stylesHead}>Password</TableCell>\r\n                                <TableCell style={stylesHead}>Active</TableCell>\r\n                                <TableCell style={stylesHead}>Email</TableCell>\r\n                                <TableCell style={stylesHead}>Edit</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                        {loading && <em>Loading users...</em>}\r\n                            {data.map && data.map((data, i) => {\r\n                             return (\r\n                                <TableRow key={i}>\r\n                                    <TableCell style={stylesBody}>{data.id}</TableCell>\r\n                                    <TableCell style={stylesBody}>{data.tagid}</TableCell>\r\n                                    <TableCell style={stylesBody}>{data.fname}</TableCell>\r\n                                    <TableCell style={stylesBody}>{data.lname}</TableCell>\r\n                                    <TableCell style={stylesBody}>{data.pin}</TableCell>\r\n                                    <TableCell style={stylesBody}>{data.transactionno}</TableCell>\r\n                                    <TableCell style={stylesBody}>{data.money}</TableCell>\r\n                                    <TableCell style={stylesBody}>{data.password}</TableCell>\r\n                                    <TableCell style={stylesBody}>{data.active}</TableCell>\r\n                                    <TableCell style={stylesBody}>{data.email}</TableCell>\r\n                                    <TableCell style={stylesBody}><div className=\"update\">\r\n                                        <ul>\r\n                                            <li onClick={()=> {\r\n                                                handleClick(data.id)\r\n                                            }}>\r\n                                                Update\r\n                                            </li>\r\n                                        </ul>\r\n                                        </div></TableCell>\r\n                                </TableRow>\r\n                        )})}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </div>\r\n        </div>\r\n        \r\n        \r\n    )\r\n}\r\n\r\nexport default Registration;","C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\components\\userTransaction\\index.js",["285","286","287","288","289"],"import React, { useEffect } from 'react';\r\nimport {\r\n    TableContainer, Table, TableHead,\r\n    TableRow, TableBody, TableCell\r\n  } from '@material-ui/core';\r\nimport Paper from '@material-ui/core/Paper';\r\n//import ReactHTMLTableToExcel from 'react-html-table-to-excel';\r\nimport moment from 'moment';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport './index.scss'\r\nimport { fetchUserTrans } from '../../redux/users/userActions';\r\n\r\nconst UserTransaction =()=> {\r\n\r\n    const dispatch = useDispatch()\r\n    const data = useSelector(state=> state.user.users)\r\n    const user = useSelector(state=> state.user.user)\r\n\r\n    useEffect(()=> {\r\n        dispatch(fetchUserTrans(data.id))\r\n    },[])\r\n\r\n      const stylesHead = {\r\n        fontSize: '20px',\r\n        cursor: 'pointer',\r\n        width: '15%',\r\n        fontWeight: '500',\r\n        textTransform: 'uppercase',\r\n        padding: '4px 4px'\r\n      };\r\n\r\n      const stylesBody = {\r\n        fontSize: '15px',\r\n        cursor: 'pointer',\r\n        width: '15%',\r\n        fontWeight: '400',\r\n        padding: '4px 4px'\r\n      };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Transaction History</h1>\r\n            \r\n            \r\n            <div>\r\n                <TableContainer component={Paper}>\r\n                <Table id=\"table-to-xls\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell style={stylesHead}># </TableCell>\r\n                            <TableCell style={stylesHead}>Amount </TableCell>\r\n                            <TableCell style={stylesHead}>Date </TableCell>\r\n                            <TableCell style={stylesHead}>Location </TableCell>\r\n                            {/* <TableCell style={stylesHead}>Action </TableCell> */}\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                    \r\n                        {user.map && user.map((data, i)=> (\r\n                            \r\n                            <TableRow className=\"linkss\" key={i}>\r\n                                <TableCell style={stylesBody}>{i + 1}</TableCell>\r\n                                <TableCell style={stylesBody}>{data.amount}</TableCell>\r\n                                <TableCell style={stylesBody}>{moment(data.time).format('YYYY-MM-DD')}</TableCell>\r\n                                <TableCell style={stylesBody}>{data.location}</TableCell>\r\n                                {/* <TableCell style={stylesBody}><TableButton onClick={()=>{\r\n                                                handleClick(data.id)\r\n                                }}> Edit</TableButton> </TableCell> */}\r\n                            </TableRow>\r\n                           \r\n                        ))}\r\n                        \r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n                </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserTransaction;\r\n","C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\components\\adminDepositHis\\index.js",["290","291"],"import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { APPCONFIG } from './../../config/config';\r\nimport {\r\n    TableContainer, Table, TableHead,\r\n    TableRow, TableBody, TableCell, Paper\r\n  } from '@material-ui/core';\r\nimport './index.scss';\r\nimport FormWrapper from '../formWrapper';\r\nimport FormInput from '../forms/FornInput/formInput';\r\nimport Button from '../forms/Buttons';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchUserDepHis } from '../../redux/admin/adminActions';\r\n\r\nconst AdminDeposit =()=> {\r\n    const [deposit, setDeposit] = useState('');\r\n\r\n    const dispatch = useDispatch()\r\n    const data = useSelector(state=> state.admin.data)\r\n    const loading = useSelector(state=> state.admin.loading)\r\n\r\n    const handleSubmit =(e)=> {\r\n        e.preventDefault();\r\n        reset();\r\n        if(deposit) {\r\n            dispatch(fetchUserDepHis(deposit))\r\n            loading && <em>Loading User Deposit History...</em>\r\n        }\r\n    }\r\n\r\n      const stylesHead = {\r\n        fontSize: '20px',\r\n        cursor: 'pointer',\r\n        width: '15%',\r\n        fontWeight: '500',\r\n        textTransform: 'uppercase',\r\n        padding: '4px 4px'\r\n      };\r\n\r\n      const reset =()=> {\r\n          setDeposit('');\r\n      }\r\n\r\n      const stylesBody = {\r\n        fontSize: '15px',\r\n        cursor: 'pointer',\r\n        width: '15%',\r\n        fontWeight: '400',\r\n        padding: '4px 4px'\r\n      };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Deposit History</h1>\r\n            <div>\r\n                <form onSubmit={handleSubmit}>\r\n                    <FormWrapper>\r\n                        <FormInput\r\n                        type=\"text\"\r\n                        name=\"deposit\"\r\n                        placeholder=\"Enter ID\"\r\n                        value={deposit}\r\n                        handleChange={e => setDeposit(e.target.value)}\r\n                        />\r\n                        <Button type=\"submit\" >\r\n                            Enter\r\n                        </Button>\r\n                    </FormWrapper>\r\n                </form>\r\n            </div>\r\n            <div>\r\n                <TableContainer component={Paper}>\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell style={stylesHead}>ID</TableCell>\r\n                                <TableCell style={stylesHead}>Money</TableCell>\r\n                                <TableCell style={stylesHead}>Date</TableCell>\r\n                                <TableCell style={stylesHead}>Comment</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {data.map && data.map((data, i) => {\r\n                             return (\r\n                                <TableRow key={i}>\r\n                                    <TableCell style={stylesBody}>{data.id}</TableCell>\r\n                                    <TableCell style={stylesBody}>{data.money}</TableCell>\r\n                                    <TableCell style={stylesBody}>{data.date}</TableCell>\r\n                                    <TableCell style={stylesBody}>{data.comment}</TableCell>\r\n                                </TableRow>\r\n                            )})}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AdminDeposit;","C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\components\\userDetails\\index.js",["292"],"import React, { useState } from 'react';\r\nimport Button from '../forms/Buttons';\r\nimport FormInput from '../forms/FornInput/formInput';\r\nimport FormWrapper from '../formWrapper';\r\nimport {\r\n    TableContainer, Table, TableHead,\r\n    TableRow, TableBody, TableCell, Paper\r\n  } from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport {APPCONFIG} from './../../config/config'\r\nimport moment from 'moment';\r\nimport './index.scss'\r\n\r\nconst UserDetails =()=> {\r\n\r\n    const [user, setUser] = useState('');\r\n    const [details, setDetails] = useState([]);\r\n    const onSubmit =(e)=> {\r\n        e.preventDefault();\r\n    }\r\n\r\n    const fetchUserDetails = () => {\r\n    const headers = {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer lll`,\r\n            \"Access-Control-Allow-Origin\":\"*\"\r\n        }\r\n        console.log(details);\r\n        axios.get(`${APPCONFIG.appapi}/details/${user}`, {\r\n            headers\r\n        }).then((data) => {\r\n           \r\n         setDetails(data.data);\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        })\r\n\r\n\r\n    }\r\n\r\n    const stylesHead = {\r\n        fontSize: '20px',\r\n        cursor: 'pointer',\r\n        width: 'auto',\r\n        fontWeight: '500',\r\n        textTransform: 'uppercase',\r\n        padding: '4px 4px'\r\n      };\r\n\r\n      const stylesBody = {\r\n        fontSize: '15px',\r\n        cursor: 'pointer',\r\n        width: '15%',\r\n        fontWeight: '400',\r\n        padding: '4px 4px'\r\n      };\r\n    return (\r\n        <div>\r\n            <h1>\r\n                Get user details\r\n            </h1>\r\n            <div>\r\n                <form onSubmit={onSubmit}>\r\n                    <FormWrapper>\r\n                        <FormInput \r\n                        type=\"text\"\r\n                        name=\"user\"\r\n                        value={user}\r\n                        placeholder=\"Enter User Surname\"\r\n                        handleChange={e => setUser(e.target.value)}\r\n                        />\r\n                        <Button onClick={fetchUserDetails}>\r\n                            Get details\r\n                        </Button>\r\n                    </FormWrapper>\r\n                </form>\r\n                <TableContainer component={Paper}>\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell style={stylesHead}>ID</TableCell>\r\n                                <TableCell style={stylesHead}>Firstname</TableCell>\r\n                                <TableCell style={stylesHead}>Lastname</TableCell>\r\n                                <TableCell style={stylesHead}>Pin</TableCell>\r\n                                <TableCell style={stylesHead}>Balance</TableCell>\r\n                                <TableCell style={stylesHead}>Password</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {details.map && details.map((data, i) => {\r\n                             return (\r\n                                <TableRow key={i}>\r\n                                    <TableCell style={stylesBody}>{data.id}</TableCell>\r\n                                    <TableCell style={stylesBody}>{data.fname}</TableCell>\r\n                                    <TableCell style={stylesBody}>{data.lname}</TableCell>\r\n                                    <TableCell style={stylesBody}>{data.pin}</TableCell>\r\n                                    <TableCell style={stylesBody}>{data.balance}</TableCell>\r\n                                    <TableCell style={stylesBody}>{data.password}</TableCell>\r\n                                </TableRow>\r\n                            )})}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserDetails;","C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\components\\Home\\index.js",[],"C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\components\\View\\index.js",[],"C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\components\\header\\index.js",["293","294","295"],"C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\components\\deposit\\index.js",["296","297","298","299","300","301","302","303"],"import React, {useState, useEffect} from 'react'\r\nimport Button from '../forms/Buttons';\r\nimport Popup from './../popup'\r\nimport axios from 'axios'\r\nimport ErrorFail from './error';\r\nimport Naira from 'react-naira';\r\nimport ErrorSucc from './errorSucc';\r\nimport FormInput from '../forms/FornInput/formInput'\r\nimport FormWrapper from '../formWrapper';\r\nimport { Helmet } from 'react-helmet';\r\nimport {APPCONFIG} from './../../config/config';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport './index.scss'\r\nimport { fetchBalance, postDeposit } from '../../redux/admin/adminActions';\r\n\r\nconst Deposit =(props)=> {\r\n    const [amount, setAmount] = useState(\"\");\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [date, setDate] = useState('')\r\n    const [comment, setComment] = useState(\"\")\r\n    const [amountErr, setAmountErr] = useState({})\r\n    const [dateErr, setDateErr] = useState({})\r\n    const [idErr, setIdErr] = useState({})\r\n    const [commentErr, setCommentErr] = useState({})\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const [balance, setBalance] = useState('');\r\n    let [id, setID] = useState(\"\")\r\n\r\n    const dispatch = useDispatch();\r\n    const users = useSelector(state=> state.admin.data)\r\n\r\n    const handleSubmit =(event) => {\r\n        event.preventDefault();\r\n        const isValid = formValidation()\r\n            if (isValid) {\r\n                Change()\r\n            }\r\n            if (id && amount && date && comment ) {\r\n                dispatch(postDeposit(id, amount, date, comment ))\r\n               \r\n            } \r\n    }\r\n\r\n    const handleSubmits =(event) => {\r\n        event.preventDefault();\r\n        if(balance) {\r\n            dispatch(fetchBalance(balance))\r\n        }\r\n        reset();\r\n    }\r\n    \r\n    const formValidation=()=> {\r\n        const idErr = {}\r\n        const amountErr = {}\r\n        const dateErr = {}\r\n        const commentErr = {}\r\n        let isValid = true\r\n\r\n        if(!id) {\r\n            idErr.idField = \"Enter Valid ID\"\r\n            isValid = false\r\n        }\r\n        if(!amount) {\r\n            amountErr.amountField = \"Enter Amount\"\r\n            isValid = false\r\n        }\r\n        if(!date) {\r\n            dateErr.dateField = \"Enter Date\"\r\n            isValid = false\r\n        }\r\n        if(!comment) {\r\n            commentErr.commentField = \"Enter ID\"\r\n            isValid = false\r\n        }\r\n\r\n        setIdErr(idErr);\r\n        setDateErr(dateErr);\r\n        setAmountErr(amountErr);\r\n        setCommentErr(commentErr);\r\n        return isValid;\r\n    }\r\n\r\n\r\n    const Change =()=> {\r\n        setAmount('');\r\n        setID('');\r\n        setDate('');\r\n        setComment('');\r\n    }\r\n\r\n    const reset =()=> {\r\n        setBalance('')\r\n    }\r\n    const togglePopup =()=> {\r\n        setIsOpen(!isOpen);\r\n    }\r\n    const configWrap = {\r\n        head: 'Get Student Balance'\r\n    }\r\n\r\n    const configWraps = {\r\n        head: 'Amount to deposit'\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Helmet>\r\n                    <title>TAS Smart Card | Deposit Page</title>\r\n                </Helmet>\r\n                <h1 style={{textAlign:\"center\"}}>Deposit/Balance Page</h1>\r\n                <FormWrapper {...configWrap}>\r\n                    <form onSubmit={handleSubmits}>\r\n                    <FormInput \r\n                    type=\"text\"\r\n                    name=\"balance\"\r\n                    value={balance}\r\n                    placeholder=\"Enter ID\"\r\n                    handleChange={e=> setBalance(e.target.value)}\r\n                    />\r\n                    <Button type=\"submit\">\r\n                        Submit\r\n                    </Button>\r\n                    <br />\r\n                    <h3>{users.fname} {users.lname} Balance is <Naira>{users.money}</Naira></h3>\r\n                    </form>\r\n\r\n                </FormWrapper>\r\n                \r\n                \r\n                <FormWrapper {...configWraps}>\r\n                    \r\n                {errorMessage=='success'?<ErrorSucc /> : null }\r\n                {errorMessage=='error'?<ErrorFail /> : null }\r\n                    <form onSubmit={handleSubmit}>\r\n\r\n                        <FormInput\r\n                        required\r\n                        type=\"text\"\r\n                        name=\"id\"\r\n                        value={id}\r\n                        placeholder=\"ID\"\r\n                        handleChange={e => setID(e.target.value) }\r\n                        />\r\n                        {Object.keys(idErr).map((key)=> {\r\n                            return <div style={{ fontSize: 12, color: \"red\"}}>{idErr[key]}</div>\r\n                        })}\r\n\r\n\r\n                        <FormInput\r\n                        required\r\n                        type=\"text\"\r\n                        name=\"amount\"\r\n                        value={amount}\r\n                        placeholder=\"Amount\"\r\n                        handleChange={e => setAmount(e.target.value) }\r\n                        />\r\n                        {Object.keys(amountErr).map((key)=> {\r\n                            return <div style={{ fontSize: 12, color: \"red\"}}>{amountErr[key]}</div>\r\n                        })}\r\n\r\n                        <FormInput\r\n                        required\r\n                        type=\"text\"\r\n                        name=\"date\"\r\n                        value={date}\r\n                        placeholder=\"Date (DD/MM/YYYY)\"\r\n                        handleChange={e => setDate(e.target.value) }\r\n                        />\r\n                        {Object.keys(dateErr).map((key)=> {\r\n                            return <div style={{ fontSize: 12, color: \"red\"}}>{dateErr[key]}</div>\r\n                        })}\r\n\r\n                        <FormInput\r\n                        required\r\n                        type=\"text\"\r\n                        name=\"comment\"\r\n                        value={comment}\r\n                        placeholder=\"Comment\"\r\n                        handleChange={e => setComment(e.target.value) }\r\n                        />      \r\n                        {Object.keys(commentErr).map((key)=> {\r\n                            return <div style={{ fontSize: 12, color: \"red\"}}>{commentErr[key]}</div>\r\n                        })}\r\n                        <Button type=\"submit\"> Sunmit </Button>\r\n\r\n                        {/* {isOpen && <Popup \r\n                         content={\r\n                             <>\r\n                                <h3>Are you sure of the amount? N{amount}</h3>\r\n                                <Button onClick={depositAPI}>Confirm Deposit</Button>\r\n                             </>\r\n                         }\r\n                         handleClose={togglePopup}\r\n                        />}\r\n                        <div><h3 style={{color: 'green'}}>{msg} </h3></div> */}\r\n                    </form>\r\n                </FormWrapper>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Deposit;","C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\components\\updateUser\\index.js",["304","305","306","307"],"import React, { useEffect, useState } from 'react';\r\nimport Button from '../forms/Buttons';\r\nimport FormInput from '../forms/FornInput/formInput';\r\nimport axios from 'axios';\r\nimport './index.scss';\r\nimport { useParams } from 'react-router';\r\nimport { APPCONFIG } from '../../config/config';\r\nimport FormWrapper from '../formWrapper';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchUpdate, getUserUpdate } from '../../redux/admin/adminActions';\r\n\r\nconst UpdateUser =()=> {\r\n    \r\n    \r\n    const [update, setUpdate] = useState('');\r\n    \r\n    const dispatch = useDispatch()\r\n    const data = useSelector(state=> state.admin.data)\r\n    const [student, setStudent] = useState([]);\r\n    const handleSubmit =(e)=> {\r\n        e.preventDefault();\r\n        dispatch(fetchUpdate(data.id, data.tagid, \r\n            data.fname, data.lname, data.pin, data.password,\r\n            data.active, data.email))\r\n    }\r\n\r\n    let {id} = useParams();\r\n\r\n\r\n    const handleChange = e => {\r\n        const {name, value} = e.target;\r\n        setStudent({...data, [name]: value});\r\n    }\r\n\r\n    console.log(student)\r\n\r\n    useEffect(()=> {\r\n        dispatch(getUserUpdate(id))\r\n    },[])\r\n\r\n    const headline= {\r\n        head: \"Update Student Info\"\r\n    }\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <h1>Update Student Page</h1>\r\n            <div>\r\n                <FormWrapper {...headline}>\r\n                <form onSubmit={handleSubmit}>\r\n                <FormInput\r\n                    name=\"tagid\"\r\n                    type=\"hidden\"\r\n                    value={data.id}\r\n                    />\r\n                    <label>Tag ID</label>\r\n                    <FormInput\r\n                    name=\"tagid\"\r\n                    type=\"text\"\r\n                    placeholder=\"TagID\"\r\n                    value={data.tagid}\r\n                    handleChange={handleChange}\r\n                    />\r\n                    <label>Firstname</label>\r\n                    <FormInput\r\n                    name=\"firstname\"\r\n                    type=\"text\"\r\n                    placeholder=\"Fname\"\r\n                    value={data.fname}\r\n                    handleChange={handleChange}\r\n                    />\r\n                    <label>Lastname</label>\r\n                    <FormInput\r\n                    name=\"surname\"\r\n                    type=\"text\"\r\n                    placeholder=\"Lname\"\r\n                    value={data.lname}\r\n                    handleChange={handleChange}\r\n                    />\r\n                    <label>Pin</label>\r\n                    <FormInput\r\n                    name=\"pin\"\r\n                    type=\"text\"\r\n                    placeholder=\"Pin\"\r\n                    value={data.pin}\r\n                    handleChange={handleChange}\r\n                    />\r\n                    <label>Password</label>\r\n                    <FormInput\r\n                    name=\"password\"\r\n                    type=\"text\"\r\n                    placeholder=\"Password\"\r\n                    value={data.password}\r\n                    handleChange={handleChange}\r\n                    />\r\n                    <label>Active</label>\r\n                    <FormInput\r\n                    name=\"active\"\r\n                    type=\"text\"\r\n                    placeholder=\"Active\"\r\n                    value={data.active}\r\n                    handleChange={handleChange}\r\n                    />\r\n                    <label>Email</label>\r\n                    <FormInput\r\n                    name=\"email\"\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    value={data.email}\r\n                    handleChange={handleChange}\r\n                    />\r\n                    <p style={{color: 'green'}}>{update}</p>\r\n                    <Button type=\"submit\" >\r\n                        Update\r\n                    </Button>\r\n                </form>\r\n                </FormWrapper>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UpdateUser;","C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\components\\transactionHistory\\index.js",["308","309"],"import React, {useState, useEffect } from 'react'\r\nimport { Helmet } from 'react-helmet'\r\nimport './index.scss'\r\nimport moment from 'moment';\r\nimport {\r\n    TableContainer, Table, TableHead,\r\n    TableRow, TableBody, TableCell, Paper\r\n  } from '@material-ui/core';\r\nimport JwPagination from 'jw-react-pagination';\r\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\r\nimport FormInput from '../forms/FornInput/formInput';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchAllTransHis } from '../../redux/admin/adminActions';\r\n\r\nconst TransHistory =(props)=> {\r\n\r\n    const [userTrans, setUserTrans] = useState([])\r\n    const [page, setPage] = useState(1);\r\n    const [search, setSearch] = useState('');\r\n    const user = useSelector(state=> state.admin.data)\r\n    const loading = useSelector(state=> state.admin.loading)\r\n    const dispatch = useDispatch()\r\n    \r\n    useEffect(() => {\r\n       \r\n         dispatch(fetchAllTransHis())\r\n          \r\n      },[]);\r\n\r\n      const fetchANew = (add)=>{\r\n        let newpage = add?page+1:page-1;\r\n         setPage(newpage);\r\n      }\r\n\r\n      const handleChange = event => {\r\n        setSearch(event.target.value);\r\n      };\r\n      useEffect(() => {\r\n        getCharacter()\r\n        if (search && search.length > 1) {\r\n            if (search.length % 2 === 0) {\r\n                getCharacter();\r\n            } \r\n        } \r\n      }, [search]);\r\n\r\n      const getCharacter =()=> {\r\n        const results = userTrans.filter( userTrans =>\r\n            userTrans.time.toLowerCase().includes(search.toLowerCase()) \r\n          );\r\n          setUserTrans(results);\r\n      }\r\n\r\n      const stylesHead = {\r\n        fontSize: '20px',\r\n        cursor: 'pointer',\r\n        width: '15%',\r\n        fontWeight: '500',\r\n        textTransform: 'uppercase',\r\n        padding: '4px 4px'\r\n      };\r\n\r\n      const stylesBody = {\r\n        fontSize: '15px',\r\n        cursor: 'pointer',\r\n        width: '15%',\r\n        fontWeight: '400',\r\n        padding: '4px 4px'\r\n      };\r\n\r\n    return(\r\n        <div>\r\n            <div>\r\n                {/*<CheckBal /> */}\r\n                <Helmet>\r\n                  <title>TAS Smart Card | Transaction History</title>\r\n               </Helmet>\r\n                <h1> Transaction History</h1>\r\n                <ReactHTMLTableToExcel\r\n                    id=\"test-table-xls-button\"\r\n                    className=\"download-table-xls-button\"\r\n                    table=\"table-to-xls\"\r\n                    filename=\"Transaction History XLS\"\r\n                    sheet=\"tablexls\"\r\n                    buttonText=\"Download as XLS\"/>\r\n                    <div>\r\n                        <FormInput\r\n                        name=\"search\"\r\n                        value={search || \"\"}\r\n                        placeholder=\"Search box\"\r\n                        handleChange={handleChange}\r\n                        />\r\n                    </div>\r\n                <div>\r\n                <TableContainer component={Paper}>\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell style={stylesHead}>Transaction ID</TableCell>\r\n                                <TableCell style={stylesHead}>Student ID</TableCell>\r\n                                <TableCell style={stylesHead}>Amount</TableCell>\r\n                                <TableCell style={stylesHead}>Tag ID</TableCell>\r\n                                <TableCell style={stylesHead}>Date</TableCell>\r\n                                <TableCell style={stylesHead}>Location</TableCell>\r\n                            </TableRow>\r\n                        {loading && <em>Loading Transaction History...</em>}\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {user.map && user.map((data, i) => {\r\n                             return (\r\n                                <TableRow key={i}>\r\n                                    <TableCell style={stylesBody}>{data.transactionid}</TableCell>\r\n                                    <TableCell style={stylesBody}>{data.id}</TableCell>\r\n                                    <TableCell style={stylesBody}>{data.amount}</TableCell>\r\n                                    <TableCell style={stylesBody}>{data.tagid}</TableCell>\r\n                                    <TableCell style={stylesBody}>{moment(data.time).format('DD/MM/YYYY')}</TableCell>\r\n                                    <TableCell style={stylesBody}>{data.location}</TableCell>\r\n                                </TableRow>\r\n                            )})}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n\r\n                \r\n  <JwPagination items={userTrans} onChangePage={ fetchANew} /> \r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TransHistory;","C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\components\\forms\\FornInput\\formInput.js",[],"C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\components\\deposit\\error.js",[],"C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\components\\deposit\\errorSucc.js",[],"C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\components\\formWrapper\\index.js",[],"C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\components\\modal\\index.js",[],"C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\components\\forms\\Buttons\\index.js",[],"C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\components\\popup\\index.js",[],"C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\components\\profile\\index.js",["310","311"],"import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport './index.scss'\r\nimport {Helmet} from 'react-helmet'\r\nimport Avatar from './../../avatar.png'\r\n\r\nconst Profile =()=> {\r\n    \r\n    const users = useSelector(state => state.user.users);\r\n        \r\n\r\n    return (\r\n        <div className=\"profile\">\r\n            <Helmet>\r\n                <title>TAS Smart Card | Profile</title>\r\n            </Helmet>\r\n            <div className=\"align\">\r\n                {/* <h1 className=\"portal\">My Portal</h1> */}\r\n            </div>\r\n            <ul>\r\n                <li>\r\n                    <div className=\"avatar\">\r\n                        <img src={Avatar} alt=\"avatar\" />\r\n                    </div>\r\n                </li>\r\n                <li>\r\n                    <span className=\"displayName\">\r\n                        Welcome {users.usertype=='admin'?'admin':users.fname}\r\n                    </span>\r\n                    <h3 style={{textAlign: 'center'}} className=\"studentID\">User ID: \r\n                        {users.usertype=='admin'?'admin':users.id}\r\n                    </h3>\r\n                </li>\r\n            </ul>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\components\\forms\\FormSelect\\index.js",[],"C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\redux\\store.js",[],"C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\redux\\rootReducer.js",[],"C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\redux\\users\\userReducers.js",[],"C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\redux\\users\\userTypes.js",[],"C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\redux\\users\\userActions.js",[],"C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\redux\\helpers\\history.js",[],["312","313"],"C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\redux\\users\\userService.js",[],"C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\redux\\helpers\\userdata.js",[],["314","315"],"C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\redux\\admin\\adminReducers.js",[],"C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\redux\\admin\\adminTypes.js",[],"C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\redux\\admin\\adminActions.js",[],"C:\\Users\\dare\\tac-tuck\\tac-pay\\src\\redux\\admin\\adminService.js",[],{"ruleId":"316","replacedBy":"317"},{"ruleId":"318","replacedBy":"319"},{"ruleId":"320","severity":1,"message":"321","line":3,"column":8,"nodeType":"322","messageId":"323","endLine":3,"endColumn":14},{"ruleId":"320","severity":1,"message":"324","line":3,"column":8,"nodeType":"322","messageId":"323","endLine":3,"endColumn":14},{"ruleId":"320","severity":1,"message":"325","line":3,"column":10,"nodeType":"322","messageId":"323","endLine":3,"endColumn":20},{"ruleId":"320","severity":1,"message":"326","line":16,"column":12,"nodeType":"322","messageId":"323","endLine":16,"endColumn":23},{"ruleId":"327","severity":1,"message":"328","line":25,"column":7,"nodeType":"329","endLine":25,"endColumn":9,"suggestions":"330"},{"ruleId":"327","severity":1,"message":"331","line":54,"column":10,"nodeType":"329","endLine":54,"endColumn":18,"suggestions":"332"},{"ruleId":"320","severity":1,"message":"333","line":1,"column":16,"nodeType":"322","messageId":"323","endLine":1,"endColumn":25},{"ruleId":"320","severity":1,"message":"334","line":16,"column":26,"nodeType":"322","messageId":"323","endLine":16,"endColumn":41},{"ruleId":"320","severity":1,"message":"335","line":2,"column":8,"nodeType":"322","messageId":"323","endLine":2,"endColumn":13},{"ruleId":"320","severity":1,"message":"336","line":7,"column":9,"nodeType":"322","messageId":"323","endLine":7,"endColumn":18},{"ruleId":"320","severity":1,"message":"337","line":16,"column":10,"nodeType":"322","messageId":"323","endLine":16,"endColumn":14},{"ruleId":"320","severity":1,"message":"338","line":32,"column":20,"nodeType":"322","messageId":"323","endLine":32,"endColumn":29},{"ruleId":"327","severity":1,"message":"328","line":99,"column":7,"nodeType":"329","endLine":99,"endColumn":9,"suggestions":"339"},{"ruleId":"320","severity":1,"message":"340","line":9,"column":8,"nodeType":"322","messageId":"323","endLine":9,"endColumn":29},{"ruleId":"320","severity":1,"message":"341","line":17,"column":12,"nodeType":"322","messageId":"323","endLine":17,"endColumn":17},{"ruleId":"320","severity":1,"message":"342","line":18,"column":12,"nodeType":"322","messageId":"323","endLine":18,"endColumn":21},{"ruleId":"327","severity":1,"message":"343","line":26,"column":7,"nodeType":"329","endLine":26,"endColumn":9,"suggestions":"344"},{"ruleId":"320","severity":1,"message":"345","line":28,"column":11,"nodeType":"322","messageId":"323","endLine":28,"endColumn":28},{"ruleId":"320","severity":1,"message":"335","line":2,"column":8,"nodeType":"322","messageId":"323","endLine":2,"endColumn":13},{"ruleId":"320","severity":1,"message":"336","line":3,"column":10,"nodeType":"322","messageId":"323","endLine":3,"endColumn":19},{"ruleId":"320","severity":1,"message":"346","line":11,"column":8,"nodeType":"322","messageId":"323","endLine":11,"endColumn":14},{"ruleId":"320","severity":1,"message":"347","line":2,"column":10,"nodeType":"322","messageId":"323","endLine":2,"endColumn":17},{"ruleId":"320","severity":1,"message":"348","line":6,"column":8,"nodeType":"322","messageId":"323","endLine":6,"endColumn":11},{"ruleId":"349","severity":1,"message":"350","line":15,"column":26,"nodeType":"351","messageId":"352","endLine":15,"endColumn":28},{"ruleId":"320","severity":1,"message":"333","line":1,"column":26,"nodeType":"322","messageId":"323","endLine":1,"endColumn":35},{"ruleId":"320","severity":1,"message":"353","line":3,"column":8,"nodeType":"322","messageId":"323","endLine":3,"endColumn":13},{"ruleId":"320","severity":1,"message":"335","line":4,"column":8,"nodeType":"322","messageId":"323","endLine":4,"endColumn":13},{"ruleId":"320","severity":1,"message":"336","line":11,"column":9,"nodeType":"322","messageId":"323","endLine":11,"endColumn":18},{"ruleId":"320","severity":1,"message":"354","line":25,"column":26,"nodeType":"322","messageId":"323","endLine":25,"endColumn":41},{"ruleId":"320","severity":1,"message":"355","line":94,"column":11,"nodeType":"322","messageId":"323","endLine":94,"endColumn":22},{"ruleId":"349","severity":1,"message":"350","line":133,"column":30,"nodeType":"351","messageId":"352","endLine":133,"endColumn":32},{"ruleId":"349","severity":1,"message":"350","line":134,"column":30,"nodeType":"351","messageId":"352","endLine":134,"endColumn":32},{"ruleId":"320","severity":1,"message":"335","line":4,"column":8,"nodeType":"322","messageId":"323","endLine":4,"endColumn":13},{"ruleId":"320","severity":1,"message":"336","line":7,"column":10,"nodeType":"322","messageId":"323","endLine":7,"endColumn":19},{"ruleId":"320","severity":1,"message":"356","line":15,"column":20,"nodeType":"322","messageId":"323","endLine":15,"endColumn":29},{"ruleId":"327","severity":1,"message":"357","line":39,"column":7,"nodeType":"329","endLine":39,"endColumn":9,"suggestions":"358"},{"ruleId":"327","severity":1,"message":"328","line":28,"column":9,"nodeType":"329","endLine":28,"endColumn":11,"suggestions":"359"},{"ruleId":"327","severity":1,"message":"331","line":45,"column":10,"nodeType":"329","endLine":45,"endColumn":18,"suggestions":"360"},{"ruleId":"349","severity":1,"message":"350","line":28,"column":48,"nodeType":"351","messageId":"352","endLine":28,"endColumn":50},{"ruleId":"349","severity":1,"message":"350","line":31,"column":40,"nodeType":"351","messageId":"352","endLine":31,"endColumn":42},{"ruleId":"316","replacedBy":"361"},{"ruleId":"318","replacedBy":"362"},{"ruleId":"316","replacedBy":"363"},{"ruleId":"318","replacedBy":"364"},"no-native-reassign",["365"],"no-negated-in-lhs",["366"],"no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","'Footer' is defined but never used.","'useHistory' is defined but never used.","'userDeposit' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["367"],"React Hook useEffect has a missing dependency: 'getCharacter'. Either include it or remove the dependency array.",["368"],"'useEffect' is defined but never used.","'setLoginMessage' is assigned a value but never used.","'axios' is defined but never used.","'APPCONFIG' is defined but never used.","'Link' is defined but never used.","'setErrors' is assigned a value but never used.",["369"],"'ReactHTMLTableToExcel' is defined but never used.","'trans' is assigned a value but never used.","'userTrans' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'data.id' and 'dispatch'. Either include them or remove the dependency array.",["370"],"'fetchTransactions' is assigned a value but never used.","'moment' is defined but never used.","'NavLink' is defined but never used.","'Img' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Popup' is defined but never used.","'setErrorMessage' is assigned a value but never used.","'togglePopup' is assigned a value but never used.","'setUpdate' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'id'. Either include them or remove the dependency array.",["371"],["372"],["373"],["365"],["366"],["365"],["366"],"no-global-assign","no-unsafe-negation",{"desc":"374","fix":"375"},{"desc":"376","fix":"377"},{"desc":"374","fix":"378"},{"desc":"379","fix":"380"},{"desc":"381","fix":"382"},{"desc":"374","fix":"383"},{"desc":"376","fix":"384"},"Update the dependencies array to be: [dispatch]",{"range":"385","text":"386"},"Update the dependencies array to be: [getCharacter, search]",{"range":"387","text":"388"},{"range":"389","text":"386"},"Update the dependencies array to be: [data.id, dispatch]",{"range":"390","text":"391"},"Update the dependencies array to be: [dispatch, id]",{"range":"392","text":"393"},{"range":"394","text":"386"},{"range":"395","text":"388"},[863,865],"[dispatch]",[1551,1559],"[getCharacter, search]",[3143,3145],[886,888],"[data.id, dispatch]",[1185,1187],"[dispatch, id]",[988,990],[1407,1415]]