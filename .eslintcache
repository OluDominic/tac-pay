[{"C:\\Users\\dare\\tac-payment-system\\src\\index.js":"1","C:\\Users\\dare\\tac-payment-system\\src\\App.js":"2","C:\\Users\\dare\\tac-payment-system\\src\\reportWebVitals.js":"3","C:\\Users\\dare\\tac-payment-system\\src\\pages\\checkBalance\\checkBalance.js":"4","C:\\Users\\dare\\tac-payment-system\\src\\layouts\\mainLay\\index.js":"5","C:\\Users\\dare\\tac-payment-system\\src\\pages\\profile\\index.js":"6","C:\\Users\\dare\\tac-payment-system\\src\\pages\\checkAttendance\\index.js":"7","C:\\Users\\dare\\tac-payment-system\\src\\pages\\admin\\index.js":"8","C:\\Users\\dare\\tac-payment-system\\src\\pages\\registrationForm\\index.js":"9","C:\\Users\\dare\\tac-payment-system\\src\\pages\\LoginForm\\index.js":"10","C:\\Users\\dare\\tac-payment-system\\src\\pages\\paymentHistory\\index.js":"11","C:\\Users\\dare\\tac-payment-system\\src\\layouts\\adminLay\\index.js":"12","C:\\Users\\dare\\tac-payment-system\\src\\components\\checkBalance\\index.js":"13","C:\\Users\\dare\\tac-payment-system\\src\\components\\paymentHistory\\index.js":"14","C:\\Users\\dare\\tac-payment-system\\src\\components\\profile\\index.js":"15","C:\\Users\\dare\\tac-payment-system\\src\\components\\login\\index.js":"16","C:\\Users\\dare\\tac-payment-system\\src\\components\\checkAttendance\\index.js":"17","C:\\Users\\dare\\tac-payment-system\\src\\components\\registration\\index.js":"18","C:\\Users\\dare\\tac-payment-system\\src\\components\\header\\index.js":"19","C:\\Users\\dare\\tac-payment-system\\src\\components\\View\\index.js":"20","C:\\Users\\dare\\tac-payment-system\\src\\components\\footer\\index.js":"21","C:\\Users\\dare\\tac-payment-system\\src\\components\\forms\\FornInput\\formInput.js":"22","C:\\Users\\dare\\tac-payment-system\\src\\components\\forms\\Buttons\\index.js":"23","C:\\Users\\dare\\tac-payment-system\\src\\components\\admin\\admin.js":"24","C:\\Users\\dare\\tac-payment-system\\src\\pages\\myTran\\index.js":"25","C:\\Users\\dare\\tac-payment-system\\src\\layouts\\HomeLay\\index.js":"26","C:\\Users\\dare\\tac-payment-system\\src\\pages\\Homepage\\index.js":"27","C:\\Users\\dare\\tac-payment-system\\src\\components\\Home\\index.js":"28","C:\\Users\\dare\\tac-payment-system\\src\\components\\myTran\\index.js":"29","C:\\Users\\dare\\tac-payment-system\\src\\components\\formWrapper\\index.js":"30","C:\\Users\\dare\\tac-payment-system\\src\\components\\dashboard\\index.js":"31","C:\\Users\\dare\\tac-payment-system\\src\\pages\\deposit\\index.js":"32","C:\\Users\\dare\\tac-payment-system\\src\\components\\deposit\\index.js":"33","C:\\Users\\dare\\tac-payment-system\\src\\components\\popup\\index.js":"34","C:\\Users\\dare\\tac-payment-system\\src\\pages\\transactionHistory\\index.js":"35","C:\\Users\\dare\\tac-payment-system\\src\\components\\transactionHistory\\index.js":"36","C:\\Users\\dare\\tac-payment-system\\src\\components\\forms\\FormSelect\\index.js":"37","C:\\Users\\dare\\tac-payment-system\\src\\config\\config.js":"38","C:\\Users\\dare\\tac-payment-system\\src\\layouts\\studentLay\\index.js":"39","C:\\Users\\dare\\tac-payment-system\\src\\pages\\dashboard\\dashboard.js":"40","C:\\Users\\dare\\tac-payment-system\\src\\pages\\depositHis\\index.js":"41","C:\\Users\\dare\\tac-payment-system\\src\\components\\userDeposit\\index.js":"42","C:\\Users\\dare\\tac-payment-system\\src\\components\\deposit\\error.js":"43","C:\\Users\\dare\\tac-payment-system\\src\\components\\deposit\\errorSucc.js":"44","C:\\Users\\dare\\tac-payment-system\\src\\pages\\DeleteUserPage\\index.js":"45","C:\\Users\\dare\\tac-payment-system\\src\\components\\deleteUser\\index.js":"46","C:\\Users\\dare\\tac-payment-system\\src\\pages\\userTrans\\index.js":"47","C:\\Users\\dare\\tac-payment-system\\src\\components\\userTransaction\\index.js":"48","C:\\Users\\dare\\tac-payment-system\\src\\pages\\AdminDepositHis\\index.js":"49","C:\\Users\\dare\\tac-payment-system\\src\\components\\adminDepositHis\\index.js":"50","C:\\Users\\dare\\tac-payment-system\\src\\components\\modal\\index.js":"51","C:\\Users\\dare\\tac-payment-system\\src\\pages\\updateUserPage\\index.js":"52","C:\\Users\\dare\\tac-payment-system\\src\\components\\updateUser\\index.js":"53"},{"size":634,"mtime":1612512142092,"results":"54","hashOfConfig":"55"},{"size":3414,"mtime":1620833156441,"results":"56","hashOfConfig":"55"},{"size":362,"mtime":499162500000,"results":"57","hashOfConfig":"58"},{"size":226,"mtime":1611075629439,"results":"59","hashOfConfig":"55"},{"size":378,"mtime":1611155291183,"results":"60","hashOfConfig":"55"},{"size":183,"mtime":1611142205521,"results":"61","hashOfConfig":"58"},{"size":254,"mtime":1611075629439,"results":"62","hashOfConfig":"55"},{"size":218,"mtime":1611155429132,"results":"63","hashOfConfig":"55"},{"size":240,"mtime":1611075629440,"results":"64","hashOfConfig":"55"},{"size":207,"mtime":1612112177179,"results":"65","hashOfConfig":"55"},{"size":238,"mtime":1611221308150,"results":"66","hashOfConfig":"55"},{"size":2365,"mtime":1620807468601,"results":"67","hashOfConfig":"55"},{"size":817,"mtime":1612131326283,"results":"68","hashOfConfig":"55"},{"size":5207,"mtime":1621252284778,"results":"69","hashOfConfig":"55"},{"size":1439,"mtime":1620808015725,"results":"70","hashOfConfig":"55"},{"size":2810,"mtime":1620556569130,"results":"71","hashOfConfig":"55"},{"size":331,"mtime":1616669645264,"results":"72","hashOfConfig":"55"},{"size":13298,"mtime":1620900153563,"results":"73","hashOfConfig":"55"},{"size":2119,"mtime":1612367603321,"results":"74","hashOfConfig":"55"},{"size":330,"mtime":1611142204995,"results":"75","hashOfConfig":"55"},{"size":513,"mtime":1612559495214,"results":"76","hashOfConfig":"55"},{"size":431,"mtime":1611314189542,"results":"77","hashOfConfig":"55"},{"size":231,"mtime":1611156805562,"results":"78","hashOfConfig":"55"},{"size":884,"mtime":1612691072342,"results":"79","hashOfConfig":"55"},{"size":218,"mtime":1611228340487,"results":"80","hashOfConfig":"55"},{"size":366,"mtime":1611242002371,"results":"81","hashOfConfig":"55"},{"size":229,"mtime":1611238258196,"results":"82","hashOfConfig":"55"},{"size":1121,"mtime":1612691072526,"results":"83","hashOfConfig":"55"},{"size":4323,"mtime":1620817830659,"results":"84","hashOfConfig":"55"},{"size":426,"mtime":1611236317296,"results":"85","hashOfConfig":"55"},{"size":208,"mtime":1611327936490,"results":"86","hashOfConfig":"55"},{"size":220,"mtime":1611332197624,"results":"87","hashOfConfig":"55"},{"size":8154,"mtime":1620898120433,"results":"88","hashOfConfig":"55"},{"size":353,"mtime":1611439389597,"results":"89","hashOfConfig":"55"},{"size":253,"mtime":1611483110291,"results":"90","hashOfConfig":"55"},{"size":5504,"mtime":1621254117592,"results":"91","hashOfConfig":"55"},{"size":881,"mtime":1611231749983,"results":"92","hashOfConfig":"55"},{"size":137,"mtime":1612023108704,"results":"93","hashOfConfig":"55"},{"size":1436,"mtime":1620310957524,"results":"94","hashOfConfig":"55"},{"size":223,"mtime":1611327936491,"results":"95","hashOfConfig":"58"},{"size":231,"mtime":1620305550455,"results":"96","hashOfConfig":"55"},{"size":3434,"mtime":1620653039257,"results":"97","hashOfConfig":"55"},{"size":206,"mtime":1612530035071,"results":"98","hashOfConfig":"55"},{"size":213,"mtime":1612530036728,"results":"99","hashOfConfig":"55"},{"size":232,"mtime":1612542009316,"results":"100","hashOfConfig":"55"},{"size":1420,"mtime":1612691071459,"results":"101","hashOfConfig":"55"},{"size":184,"mtime":1620310789162,"results":"102","hashOfConfig":"55"},{"size":3540,"mtime":1620652738629,"results":"103","hashOfConfig":"55"},{"size":192,"mtime":1620728155230,"results":"104","hashOfConfig":"55"},{"size":3805,"mtime":1620817461410,"results":"105","hashOfConfig":"55"},{"size":447,"mtime":1620745972278,"results":"106","hashOfConfig":"55"},{"size":179,"mtime":1620833156394,"results":"107","hashOfConfig":"55"},{"size":4926,"mtime":1621248367266,"results":"108","hashOfConfig":"55"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},"uw79id",{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"111"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},"7nymci",{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"111"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"111"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"111"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"147"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"111"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"111"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"111"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"111"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"111"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"111"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"111"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"111"},"C:\\Users\\dare\\tac-payment-system\\src\\index.js",[],["232","233"],"C:\\Users\\dare\\tac-payment-system\\src\\App.js",["234","235"],"import React from 'react';\nimport MainLay from './layouts/mainLay';\nimport AdminLay from './layouts/adminLay';\nimport StudentLay from './layouts/studentLay'\nimport HomeLay from './layouts/HomeLay';\nimport { Switch, Route } from 'react-router-dom'\nimport Admin from './pages/admin';\nimport LoginForm from './pages/LoginForm';\nimport RegistrationForm from './pages/registrationForm';\nimport Payment from './pages/paymentHistory';\nimport CheckBal from './pages/checkBalance/checkBalance';\nimport CheckAttendance from './pages/checkAttendance';\nimport './default.scss';\nimport MyTranaction from './pages/myTran';\nimport UserDeposit from './components/userDeposit'\nimport Homepage from './pages/Homepage';\nimport Dashboard from './components/dashboard';\nimport DepositPage from './pages/deposit';\nimport TransactionHistory from './pages/transactionHistory';\n\nimport DeleteUserPage from './pages/DeleteUserPage';\nimport UserTrans from './pages/userTrans';\nimport AdminDepositHis from './pages/AdminDepositHis';\nimport UpdateUserPage from './pages/updateUserPage';\n\nconst App=(props)=> {\n\n\n  return (\n    <div className=\"App\">\n      \n      <Switch>\n      <Route exact path=\"/\" render={()=> (\n          <HomeLay>\n            <Homepage />\n          </HomeLay>\n        )}/>\n        <Route path=\"/profile\" render={()=> (\n          <StudentLay>\n            <Dashboard />\n          </StudentLay>\n        )}/>\n        <Route path=\"/admin\" render={()=> (\n          <AdminLay>\n            <Admin />\n          </AdminLay>\n        )}/>\n        <Route path=\"/transaction\" render={()=> (\n          <AdminLay>\n            <TransactionHistory />\n          </AdminLay>\n        )}/>\n        <Route path=\"/deposithistory\" render={()=> (\n          <AdminLay>\n            <AdminDepositHis />\n          </AdminLay>\n        )}/>\n        <Route path=\"/updateuser/:id\" render={()=> (\n          <AdminLay>\n            <UpdateUserPage />\n          </AdminLay>\n        )}/>\n      {\n        /**\n         * \n         *   <Route path=\"/login\" render={()=> (\n          <MainLay>\n            <LoginForm />\n          </MainLay>\n        )}  />\n        \n         */\n      }\n        <Route path=\"/register\" render={()=> (\n          <AdminLay>\n            <RegistrationForm />\n          </AdminLay>\n        )} />\n        <Route path=\"/payment\" render={()=> (\n          <AdminLay>\n            <Payment />\n          </AdminLay>\n        )} />\n        <Route path=\"/usertransaction\" render={()=> (\n          <AdminLay>\n            <MyTranaction />\n          </AdminLay>\n        )} />\n\n        <Route path=\"/delete\" render={()=> (\n          <AdminLay>\n            <DeleteUserPage />\n          </AdminLay>\n        )} />\n\n        <Route path=\"/balance\" render={()=> (\n          <StudentLay>\n            <CheckBal />\n          </StudentLay>\n        )} />\n        <Route path=\"/transactionhistory\" render={()=> (\n          <StudentLay>\n            <UserTrans />\n          </StudentLay>\n        )} />\n        <Route path=\"/userdeposit\" render={()=> (\n          <StudentLay>\n            <UserDeposit />\n          </StudentLay>\n        )} />\n        <Route path=\"/deposit\" render={()=> (\n          <AdminLay>\n            <DepositPage />\n          </AdminLay>\n        )} />\n        <Route path=\"/attendance\" render={()=> (\n          <StudentLay>\n            <CheckAttendance />\n          </StudentLay>\n        )} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\dare\\tac-payment-system\\src\\reportWebVitals.js",[],["236","237"],"C:\\Users\\dare\\tac-payment-system\\src\\pages\\checkBalance\\checkBalance.js",[],"C:\\Users\\dare\\tac-payment-system\\src\\layouts\\mainLay\\index.js",[],"C:\\Users\\dare\\tac-payment-system\\src\\pages\\profile\\index.js",[],["238","239"],"C:\\Users\\dare\\tac-payment-system\\src\\pages\\checkAttendance\\index.js",[],"C:\\Users\\dare\\tac-payment-system\\src\\pages\\admin\\index.js",[],"C:\\Users\\dare\\tac-payment-system\\src\\pages\\registrationForm\\index.js",[],"C:\\Users\\dare\\tac-payment-system\\src\\pages\\LoginForm\\index.js",[],"C:\\Users\\dare\\tac-payment-system\\src\\pages\\paymentHistory\\index.js",[],"C:\\Users\\dare\\tac-payment-system\\src\\layouts\\adminLay\\index.js",["240"],"import React from 'react';\r\nimport Header from './../../components/header'\r\nimport Footer from './../../components/footer'\r\nimport View from './../../components/View'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst AdminLay =(props)=> {\r\n    \r\n\r\n    return (\r\n        <div className=\"tacAdminLay\">\r\n            <Header {...props} />\r\n            <div className=\"tacControl\">\r\n                <div className=\"controlLay\">\r\n                    <View>\r\n                        <ul>\r\n                            <li>\r\n                                <Link to=\"/deposit\">\r\n                                    Deposit/ Balance\r\n                                </Link>\r\n                            </li>\r\n                            \r\n                            <li>\r\n                                <Link to=\"/usertransaction\">\r\n                                    User Transaction History\r\n                                </Link>\r\n                            </li>\r\n                            <li>\r\n                                <Link to=\"/deposithistory\">\r\n                                    User Deposit History\r\n                                </Link>\r\n                            </li>\r\n                            <li>\r\n                                <Link to=\"/transaction\">\r\n                                    All Transaction History\r\n                                </Link>\r\n                            </li>\r\n                            <li>\r\n                                <Link to=\"/payment\">\r\n                                    All Payment History\r\n                                </Link>\r\n                            </li>\r\n                            <li>\r\n                                <Link to=\"/register\">\r\n                                    Students\r\n                                </Link>\r\n                            </li>\r\n                            <li>\r\n                                <Link to=\"/delete\">\r\n                                    Delete User\r\n                                </Link>\r\n                            </li>\r\n                        </ul>\r\n                    </View>\r\n                </div>\r\n                <div className=\"layerContent\">\r\n                    {props.children}\r\n                </div>\r\n            </div>\r\n            {/* <Footer /> */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AdminLay;","C:\\Users\\dare\\tac-payment-system\\src\\components\\checkBalance\\index.js",["241","242","243"],"import React, {useState,useEffect} from 'react'\r\nimport './index.scss'\r\n\r\nconst CheckBalance =()=> {\r\n\r\n    const [balance, setBalance] = useState(\" \")\r\n    let [userdata,setUserdata] = useState({});\r\n\r\n    useEffect(() => {\r\n        let data = localStorage.getItem('userdata')\r\n\r\n        if (!data) {\r\n           // history.push('/')\r\n        }\r\n        else{\r\n            data=JSON.parse(data);\r\n            setBalance(data.money);\r\n      console.log(data,userdata,'userdatauserdata')\r\n        }\r\n    },[]);\r\n\r\n    const handleChange =(e)=> {\r\n        setBalance(e.target.value)\r\n    }\r\n\r\n    return(\r\n\r\n        <div className=\"balance\">\r\n            <div>\r\n                <h2>Your current balance is: <strong> N{balance}</strong></h2>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckBalance;","C:\\Users\\dare\\tac-payment-system\\src\\components\\paymentHistory\\index.js",["244","245"],"import React, { useState, useEffect} from 'react'\r\nimport './index.scss'\r\nimport axios from 'axios';\r\nimport { Helmet } from 'react-helmet'\r\nimport  {APPCONFIG} from '../../config/config';\r\nimport {\r\n    TableContainer, Table, TableHead,\r\n    TableRow, TableBody, TableCell, Paper, makeStyles\r\n  } from '@material-ui/core';\r\nimport moment from 'moment';\r\nimport JwPagination from 'jw-react-pagination';\r\nimport FormInput from './../forms/FornInput/formInput';\r\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\r\n\r\nconst PaymentHistory =()=> {\r\n\r\n    const [trans, setTrans ] = useState([]);\r\n    const [search, setSearch] = useState(\"\");\r\n\r\n   \r\n    // useEffect(()=> {\r\n    //     getCharacter()\r\n    //     if (search && search.length > 1) {\r\n    //         if (search.length % 2 === 0) {\r\n    //             getCharacter()\r\n    //         }\r\n    //     }\r\n    // },[search]);\r\n\r\n    // const getCharacter=()=> {\r\n    //     const results = trans.filter(trans => \r\n    //         trans.id.toLowerCase().includes(search.toLowerCase()) ||\r\n    //         trans.date.toLowerCase().includes(search.toLowerCase()));\r\n    //         setTrans(results)\r\n    // }\r\n\r\n    const useStyles = makeStyles({\r\n        table: {\r\n        },\r\n      });\r\n\r\n      const stylesHead = {\r\n        fontSize: '20px',\r\n        cursor: 'pointer',\r\n        width: '15%',\r\n        fontWeight: '500',\r\n        textTransform: 'uppercase',\r\n        padding: '4px 4px'\r\n      };\r\n\r\n      const stylesBody = {\r\n        fontSize: '15px',\r\n        cursor: 'pointer',\r\n        width: '15%',\r\n        fontWeight: '400',\r\n        padding: '4px 4px'\r\n      };\r\n\r\n      const handleChange = event => {\r\n        setSearch(event.target.value);\r\n      };\r\n      useEffect(() => {\r\n        getCharacter()\r\n        if (search && search.length > 1) {\r\n            if (search.length % 2 === 0) {\r\n                getCharacter();\r\n            } \r\n        } \r\n      }, [search]);\r\n\r\n      const getCharacter =()=> {\r\n        const results = trans.filter( trans =>\r\n            trans.date.toLowerCase().includes(search.toLowerCase()) || \r\n            trans.id.toLowerCase().includes(search.toLowerCase())\r\n          );\r\n          setTrans(results);\r\n      }\r\n\r\n    useEffect(() => {\r\n        console.log(\"Behavior when the value of 'foo' changes.\");\r\n       fetchPaymentHistory()\r\n      },[setTrans]);\r\n\r\n        const fetchPaymentHistory = () => {\r\n            console.log(8999)\r\n        const headers = {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer lll`,\r\n                \"Access-Control-Allow-Origin\":\"*\"\r\n            }\r\n    console.log('here')\r\n            axios.get(`${APPCONFIG.appapi}/fetchtransactions?page=1`, {\r\n                headers\r\n            }).then((data) => {\r\n               \r\n             setTrans(data.data);\r\n            }).catch((error) => {\r\n                console.log(error);\r\n            })\r\n        }\r\n\r\n    return (\r\n        <div>\r\n            <Helmet>\r\n                <title>TAS Smart Card | Payment History</title>\r\n            </Helmet>\r\n            <h1>\r\n                Payment History\r\n            </h1>\r\n                <ReactHTMLTableToExcel\r\n                    id=\"test-table-xls-button\"\r\n                    className=\"download-table-xls-button\"\r\n                    table=\"table-to-xls\"\r\n                    filename=\"Payment History XLS\"\r\n                    sheet=\"tablexls\"\r\n                    buttonText=\"Download as XLS\"/>\r\n            <div>\r\n                <FormInput\r\n                name=\"search\"\r\n                value={search || \"\"}\r\n                placeholder=\"Search Bar\"\r\n                handleChange={handleChange}\r\n                />\r\n            </div>\r\n\r\n            <div>\r\n               \r\n            <TableContainer component={Paper}>\r\n                    <Table className={useStyles.table}>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell style={stylesHead}>ID</TableCell>\r\n                                <TableCell style={stylesHead}>Amount</TableCell>\r\n                                <TableCell style={stylesHead}>Date</TableCell>\r\n                                <TableCell style={stylesHead}>Comment</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {trans.map((data, i) => {\r\n                             return (\r\n                                <TableRow key={i}>\r\n                                    <TableCell style={stylesBody}>{data.id}</TableCell>\r\n                                    <TableCell style={stylesBody}>{data.money}</TableCell>\r\n                                    <TableCell style={stylesBody}>{moment(data.date).format('DD/MM/YYYY')}</TableCell>\r\n                                    <TableCell style={stylesBody}>{data.comment}</TableCell>\r\n                                </TableRow>\r\n                            )})}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n          \r\n            </div>\r\n        </div>\r\n    );\r\n    \r\n}\r\n\r\nexport default PaymentHistory;","C:\\Users\\dare\\tac-payment-system\\src\\components\\profile\\index.js",["246","247"],"import React, { useState ,useEffect} from 'react';\r\nimport './index.scss'\r\nimport {Helmet} from 'react-helmet'\r\nimport Avatar from './../../avatar.png'\r\n\r\nconst Profile =(props)=> {\r\n    let [userdata,setUserdata] = useState({});\r\n\r\n    useEffect(() => {\r\n        let data = localStorage.getItem('userdata')\r\n\r\n        if (!data) {\r\n           // history.push('/')\r\n        }\r\n        else{\r\n            data=JSON.parse(data);\r\n            console.log(data,'popop')\r\n      setUserdata(data);\r\n        }\r\n    },[]);\r\n\r\n    return (\r\n        <div className=\"profile\">\r\n            <Helmet>\r\n                <title>TAS Smart Card | Profile</title>\r\n            </Helmet>\r\n            <div className=\"align\">\r\n                {/* <h1 className=\"portal\">My Portal</h1> */}\r\n            </div>\r\n            <ul>\r\n                <li>\r\n                    <div className=\"avatar\">\r\n                        <img src={Avatar} alt=\"avatar\" />\r\n                    </div>\r\n                </li>\r\n                <li>\r\n                    <span className=\"displayName\">\r\n                        Welcome {userdata.usertype=='admin'?'Admin':userdata.fname}\r\n                    </span>\r\n                    <h3 className=\"studentID\">User ID: \r\n                        {userdata.usertype=='admin'?'admin':userdata.id}\r\n                    </h3>\r\n                </li>\r\n            </ul>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;",["248","249"],"C:\\Users\\dare\\tac-payment-system\\src\\components\\login\\index.js",["250"],"import React, {useState} from 'react';\r\nimport FormInput from './../forms/FornInput/formInput'\r\nimport Button from './../forms/Buttons'\r\nimport FormWrapper from './../formWrapper'\r\nimport PropTypes from 'prop-types'\r\nimport axios from 'axios'\r\nimport './index.scss'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n\r\n\r\n\r\n\r\nconst Login =({props, setToken})=> {\r\n    const history = useHistory();\r\n    const [id, setId] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [loginMessage, setLoginMessage] = useState('');\r\n\r\n    const handleSubmitForm = async event => {\r\n        event.preventDefault();\r\n       await loginUser({\r\n            id,\r\n            password\r\n        });\r\n    }\r\n\r\n    const loginUser =()=> {\r\n        axios.post(\"http://localhost:8000/login\", {\r\n            username : id,\r\n            password: password\r\n        },{\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer lll`,\r\n            \"Access-Control-Allow-Origin\":\"*\"\r\n        })\r\n        .then((response) => {\r\n            let data = response.data;\r\n            localStorage.setItem(\"userdata\",JSON.stringify(data));\r\n            if (data.usertype=='admin') {\r\n                history.push('/admin')\r\n            } else {\r\n                history.push('/profile')\r\n            }\r\n\r\n            if(response.data.message) {\r\n                setLoginMessage(response.data.message[0])\r\n            } else {\r\n                setLoginMessage(response.data[0])\r\n            }\r\n            console.log(response.data)\r\n        }).catch((error)=>{\r\n            console.log(error)\r\n        })\r\n    }\r\n    \r\n\r\n    const configWrap = {\r\n        head: 'Login Here'\r\n    }\r\n\r\n    return (\r\n\r\n        <div className=\"formWrap\">\r\n            \r\n            <FormWrapper {...configWrap}>\r\n                <form onSubmit={handleSubmitForm}>\r\n                    <h3 style={{color: 'red'}}>{loginMessage}</h3>\r\n                    <FormInput \r\n                        type=\"text\"\r\n                        name=\"id\"\r\n                        value={id}\r\n                        placeholder=\"ID\"\r\n                        handleChange={e => setId(e.target.value)}\r\n                        />\r\n                    <FormInput\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        value={password}\r\n                        placeholder=\"Password\"\r\n                        handleChange={e => setPassword(e.target.value)}\r\n                    />\r\n\r\n                    <Button onClick={loginUser} type=\"submit\">\r\n                        LogIn\r\n                    </Button>\r\n\r\n                </form>\r\n            </FormWrapper>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Login\r\n\r\nLogin.propTypes = {\r\n    setToken: PropTypes.func.isRequired\r\n}","C:\\Users\\dare\\tac-payment-system\\src\\components\\checkAttendance\\index.js",[],"C:\\Users\\dare\\tac-payment-system\\src\\components\\registration\\index.js",["251","252"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport FormInput from './../forms/FornInput/formInput'\r\nimport Button from './../forms/Buttons'\r\nimport './index.scss'\r\nimport FormWrapper from '../formWrapper';\r\nimport {APPCONFIG} from './../../config/config';\r\nimport {\r\n    TableContainer, Table, TableHead,\r\n    TableRow, TableBody, TableCell, Paper, makeStyles\r\n  } from '@material-ui/core';\r\nimport Modal from './../modal'\r\nimport { Helmet } from 'react-helmet';\r\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\r\nimport FormSelect from '../forms/FormSelect';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nconst Registration =(props)=> {\r\n\r\n    const [tagid, setTagid] = useState(\"\")\r\n    const [firstName, setFirstName] = useState(\"\")\r\n    const [surName, setSurname] = useState(\"\");\r\n    const [pin, setPin] = useState(\"\");\r\n    const [money, setMoney] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\");\r\n    const [active, setActive] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\");\r\n    const [search, setSearch] = useState(\"\");\r\n\r\n    const [errors, setErrors] = useState([]);\r\n    const [students, setStudents] = useState([]);\r\n\r\n    const [hideModal, setHideModal] = useState(true);\r\n\r\n    const toggleModal =()=> setHideModal(!hideModal);\r\n    const history = useHistory();\r\n\r\n    const configModal = {\r\n        hideModal,\r\n        toggleModal\r\n    }\r\n\r\n    let oldlist = students.map(students => {\r\n        return {tagid: students.tagid, firstName: students.fname, total: students.transactionno,\r\n            surName: students.lname, pin: students.pin, money: students.money, \r\n            password: students.password, active: students.active, email: students.email};\r\n    });\r\n\r\n    const handleClick =(id)=> {\r\n        history.push('/updateuser/'+id)\r\n    }\r\n\r\n    const useStyles = makeStyles({\r\n        table: {\r\n        },\r\n      });\r\n\r\n      const stylesHead = {\r\n        fontSize: '15px',\r\n        cursor: 'pointer',\r\n        width: '15%',\r\n        fontWeight: 'bold',\r\n        textTransform: 'uppercase',\r\n        padding: '4px 4px'\r\n      };\r\n\r\n      const stylesBody = {\r\n        fontSize: '13px',\r\n        cursor: 'pointer',\r\n        width: '15%',\r\n        fontWeight: '400',\r\n        padding: '4px 4px'\r\n      };\r\n\r\n    const configMod = {\r\n        head: 'New Student Registeration'\r\n    }\r\n    const handleSubmitForm = event => {\r\n        event.preventDefault();\r\n        reset();\r\n    }\r\n\r\n    const reset =()=> {\r\n        setTagid('');\r\n        setFirstName('');\r\n        setSurname('');\r\n        setPin('');\r\n        setMoney('');\r\n        setPassword('');\r\n    }\r\n\r\n    useEffect(()=> {\r\n        fetchStudents()\r\n    },[]);\r\n\r\n\r\n    const fetchStudents =()=> {\r\n        const header = {\r\n            \"Content-Type\" : 'application/json',\r\n            Authorisation : \"Bearer 111\",\r\n            \"Access-Control-Allow-Origin\" : \"*\"\r\n        }\r\n\r\n        axios.get(`${APPCONFIG.appapi}/fetchstudents`, {\r\n            header\r\n        })\r\n        .then((data)=> {\r\n            setStudents(data.data)\r\n        })\r\n        .catch((err)=> {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const register =()=> {\r\n        axios.post(\"http://localhost:8000/register\", {\r\n            tagid: tagid,\r\n            fname: firstName,\r\n            lname: surName,\r\n            pin: pin,\r\n            money: money,\r\n            password: password,\r\n            active: active,\r\n            email: email\r\n        })\r\n        window.location.replace('http://localhost:3000/register')\r\n        .then((response) => {\r\n            console.log(response)\r\n        })\r\n        \r\n        \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Helmet>\r\n                  <title>TAS Smart Card | Registration Page</title>\r\n               </Helmet>\r\n               <h1>Students Page</h1>\r\n            <div className=\"reg\">\r\n                <span className=\"reg-span\">\r\n                    <ul>\r\n                        <li>\r\n                            <Button onClick={()=> toggleModal()}>\r\n                                Add new user\r\n                            </Button>\r\n                        </li>\r\n                    </ul>\r\n                </span>\r\n                <span>\r\n                    <ReactHTMLTableToExcel\r\n                    id=\"test-table-xls-button\"\r\n                    className=\"download-table-xls-button\"\r\n                    table=\"table-to-xls\"\r\n                    filename=\"All Users XLS\"\r\n                    sheet=\"tablexls\"\r\n                    buttonText=\"Download as XLS\"/>\r\n                </span>\r\n            </div>\r\n            <div >\r\n                <FormInput\r\n                name=\"search\"\r\n                value={search}\r\n                placeholder=\"Search Bar\"\r\n                handleChange={e => {\r\n                    if (e.target.value) {\r\n                        const filteredTeams = students.filter(students => {\r\n                          return students.fname.toLowerCase().includes(e.target.value.toLowerCase()) ||\r\n                          students.lname.toLowerCase().includes(e.target.value.toLowerCase()) \r\n                        });\r\n                        setStudents(filteredTeams);\r\n                      } else {\r\n                        setStudents(oldlist);\r\n                      }\r\n                      setSearch(e.target.value);\r\n                  }}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Modal {...configModal}>\r\n                <FormWrapper {...configMod}>\r\n                <div className=\"formWrap\">\r\n                    {errors.length > 0 && (\r\n                        <ul>\r\n                            {errors.map((err, index) => {\r\n                                return (\r\n                                    <li key={index}>\r\n                                        {err}\r\n                                    </li>\r\n                                )\r\n                            })}\r\n                        </ul>\r\n                    )}\r\n                    <form onSubmit={handleSubmitForm}>\r\n                        \r\n                        <label>TAG ID</label>\r\n                        <FormInput \r\n                            type=\"text\"\r\n                            name=\"tagid\"\r\n                            value={tagid}\r\n                            placeholder=\"Enter Tag ID\"\r\n                            handleChange={e=> setTagid(e.target.value)}\r\n                        />\r\n                        <label>Surname</label>\r\n                        <FormInput \r\n                            type=\"text\"\r\n                            name=\"surName\"\r\n                            value={surName}\r\n                            placeholder=\"Enter Surname\"\r\n                            handleChange={e=> setSurname(e.target.value)}\r\n                        />\r\n                        <label>Firstname</label>\r\n                        <FormInput \r\n                            type=\"text\"\r\n                            name=\"firstName\"\r\n                            value={firstName}\r\n                            placeholder=\"Enter Firstname\"\r\n                            handleChange={e=> setFirstName(e.target.value)}\r\n                        />\r\n                        <label>Pin: (4 digits) </label>\r\n                        <FormInput \r\n                            type=\"number\"\r\n                            name=\"pin\"\r\n                            value={pin}\r\n                            placeholder=\"Enter Pin\"\r\n                            handleChange={e=> setPin(e.target.value)}\r\n                        />\r\n                        <label>Money</label>\r\n                        <FormInput \r\n                            type=\"text\"\r\n                            name=\"money\"\r\n                            value={money}\r\n                            placeholder=\"Enter Amount\"\r\n                            handleChange={e=> setMoney(e.target.value)}\r\n                        />\r\n                        <label>Password</label>\r\n                        <FormInput\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            value={password}\r\n                            placeholder=\"Enter Password\"\r\n                            handleChange={e => setPassword(e.target.value)}\r\n                        />\r\n                        <label>Active</label>\r\n                        <FormSelect \r\n                            options={[\r\n                                {\r\n                                    value: \"active\",\r\n                                    name: \"active\"\r\n                                },\r\n                                {\r\n                                    value: \"1\",\r\n                                    name: \"1\"\r\n                                },\r\n                                {\r\n                                    value: \"2\",\r\n                                    name: \"2\"\r\n                                }\r\n                            ]}\r\n                            handleChange={e => setActive(e.target.value)}\r\n                        />\r\n                        <label>User</label>\r\n\r\n                        <FormSelect \r\n                            options={[\r\n                                {\r\n                                    value: \"user\",\r\n                                    name: \"user\"\r\n                                },\r\n                                {\r\n                                    value: \"student\",\r\n                                    name: \"Student\"\r\n                                },\r\n                                {\r\n                                    value: \"staff\",\r\n                                    name: \"Staff\"\r\n                                }\r\n                            ]}\r\n                            handleChange={e => setEmail(e.target.value)}\r\n                        />\r\n\r\n                        <Button onClick={register} type=\"submit\">\r\n                            Register\r\n                        </Button>\r\n                    </form>\r\n                </div>\r\n            </FormWrapper>\r\n            </Modal>\r\n        </div>\r\n        <div>\r\n        <TableContainer component={Paper}>\r\n                    <Table id=\"table-to-xls\" className={useStyles.table}>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell style={stylesHead}>ID</TableCell>\r\n                                <TableCell style={stylesHead}>TAG ID</TableCell>\r\n                                <TableCell style={stylesHead}>Firstname</TableCell>\r\n                                <TableCell style={stylesHead}>Lastname</TableCell>\r\n                                <TableCell style={stylesHead}>Pin</TableCell>\r\n                                <TableCell style={stylesHead}>Total Trans</TableCell>\r\n                                <TableCell style={stylesHead}>Balance</TableCell>\r\n                                <TableCell style={stylesHead}>Password</TableCell>\r\n                                <TableCell style={stylesHead}>Active</TableCell>\r\n                                <TableCell style={stylesHead}>Email</TableCell>\r\n                                <TableCell style={stylesHead}>Edit</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {students.map((data, i) => {\r\n                             return (\r\n                                <TableRow key={i}>\r\n                                    <TableCell style={stylesBody}>{data.id}</TableCell>\r\n                                    <TableCell style={stylesBody}>{data.tagid}</TableCell>\r\n                                    <TableCell style={stylesBody}>{data.fname}</TableCell>\r\n                                    <TableCell style={stylesBody}>{data.lname}</TableCell>\r\n                                    <TableCell style={stylesBody}>{data.pin}</TableCell>\r\n                                    <TableCell style={stylesBody}>{data.transactionno}</TableCell>\r\n                                    <TableCell style={stylesBody}>{data.money}</TableCell>\r\n                                    <TableCell style={stylesBody}>{data.password}</TableCell>\r\n                                    <TableCell style={stylesBody}>{data.active}</TableCell>\r\n                                    <TableCell style={stylesBody}>{data.email}</TableCell>\r\n                                    <TableCell style={stylesBody}><div className=\"update\">\r\n                                        <ul>\r\n                                            <li onClick={()=> {\r\n                                                handleClick(data.id)\r\n                                            }}>\r\n                                                Update\r\n                                            </li>\r\n                                        </ul>\r\n                                        </div></TableCell>\r\n                                </TableRow>\r\n                        )})}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </div>\r\n        </div>\r\n        \r\n        \r\n    )\r\n}\r\n\r\nexport default Registration;","C:\\Users\\dare\\tac-payment-system\\src\\components\\header\\index.js",["253","254","255","256","257"],"import React, {useEffect, useState} from 'react';\r\nimport { useHistory} from 'react-router-dom'\r\nimport './index.scss';\r\nimport { Link } from 'react-router-dom'\r\nimport Img from './../../taclogo.jpg'\r\n\r\nconst Header = props=> {\r\n    const history = useHistory()\r\n    let [userdata, setUserdata] = useState({});\r\n    let [homepage, setHomepage] = useState({})\r\n    let [userdataid, setUserdataid] = useState(null);\r\n\r\n    useEffect(() => {\r\n        let data = localStorage.getItem('userdata')\r\n\r\n        if (!data) {\r\n           // history.push('/')\r\n        }\r\n        else{\r\n            data=JSON.parse(data);\r\n            console.log(data)\r\n        setUserdataid(data.id||data.adminid);\r\n        }\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        let data = localStorage.getItem('userdata')\r\n\r\n        if (!data) {\r\n           // history.push('/')\r\n        }\r\n        else{\r\n            data=JSON.parse(data);\r\n            console.log(data,'popop')\r\n      setUserdata(data);\r\n        }\r\n    },[]);\r\n\r\n    const logout=()=>{\r\n        localStorage.clear();\r\n        setUserdata({});\r\n        history.push('/')\r\n    }\r\n\r\n    const home=()=> {\r\n        let data = localStorage.getItem('userdata')\r\n    }\r\n    return(\r\n        <header className=\"header\">\r\n            <div className=\"headAll\">\r\n                <div className=\"logo\">\r\n                    <Link >\r\n                        <img src={Img} alt=\"img\"/>\r\n                    </Link>\r\n                </div>\r\n\r\n                <div className=\"tac-head\">\r\n\r\n                    <ul>\r\n                        <li>\r\n                            <Link >\r\n                                Home\r\n                            </Link>\r\n                       \r\n                        </li>\r\n\r\n                       {\r\n                           userdataid? <li style={{cursor: 'pointer'}} onClick={logout}>\r\n                        \r\n                           LogOut\r\n                      \r\n                   </li>:null\r\n                       }\r\n                    </ul>\r\n\r\n                </div>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","C:\\Users\\dare\\tac-payment-system\\src\\components\\View\\index.js",[],"C:\\Users\\dare\\tac-payment-system\\src\\components\\footer\\index.js",[],"C:\\Users\\dare\\tac-payment-system\\src\\components\\forms\\FornInput\\formInput.js",[],"C:\\Users\\dare\\tac-payment-system\\src\\components\\forms\\Buttons\\index.js",[],"C:\\Users\\dare\\tac-payment-system\\src\\components\\admin\\admin.js",[],"C:\\Users\\dare\\tac-payment-system\\src\\pages\\myTran\\index.js",[],"C:\\Users\\dare\\tac-payment-system\\src\\layouts\\HomeLay\\index.js",[],"C:\\Users\\dare\\tac-payment-system\\src\\pages\\Homepage\\index.js",[],"C:\\Users\\dare\\tac-payment-system\\src\\components\\Home\\index.js",[],"C:\\Users\\dare\\tac-payment-system\\src\\components\\myTran\\index.js",[],"C:\\Users\\dare\\tac-payment-system\\src\\components\\formWrapper\\index.js",[],"C:\\Users\\dare\\tac-payment-system\\src\\components\\dashboard\\index.js",[],"C:\\Users\\dare\\tac-payment-system\\src\\pages\\deposit\\index.js",[],"C:\\Users\\dare\\tac-payment-system\\src\\components\\deposit\\index.js",["258","259","260","261","262","263","264"],"import React, {useState, useEffect} from 'react'\r\nimport Button from '../forms/Buttons';\r\nimport Popup from './../popup'\r\nimport axios from 'axios'\r\nimport ErrorFail from './error';\r\nimport Naira from 'react-naira';\r\nimport ErrorSucc from './errorSucc';\r\nimport FormInput from '../forms/FornInput/formInput'\r\nimport FormWrapper from '../formWrapper';\r\nimport { Helmet } from 'react-helmet';\r\nimport {APPCONFIG} from './../../config/config';\r\nimport './index.scss'\r\n\r\nconst Deposit =(props)=> {\r\n    const [amount, setAmount] = useState(\"\");\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [date, setDate] = useState('')\r\n    const [comment, setComment] = useState(\"\")\r\n    const [errors, setErrors] = useState([])\r\n    const [amountErr, setAmountErr] = useState({})\r\n    const [dateErr, setDateErr] = useState({})\r\n    const [idErr, setIdErr] = useState({})\r\n    const [commentErr, setCommentErr] = useState({})\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const [balance, setBalance] = useState('');\r\n    const [fetchBalance, setFetchBalance] = useState([]);\r\n    let [id, setID] = useState(\"\")\r\n    const [msg, setMsg] = useState('')\r\n\r\n    const handleSubmit =(event, ) => {\r\n        event.preventDefault();\r\n        const isValid = formValidation()\r\n            if (isValid) {\r\n                Change()\r\n            }\r\n    }\r\n\r\n    const handleSubmits =(event, ) => {\r\n        event.preventDefault();\r\n        reset();\r\n    }\r\n\r\n    useEffect(()=> {\r\n        if (depositAPI) {\r\n            Change();\r\n        }\r\n    }, [])\r\n    \r\n    const formValidation=()=> {\r\n        const idErr = {}\r\n        const amountErr = {}\r\n        const dateErr = {}\r\n        const commentErr = {}\r\n        let isValid = true\r\n\r\n        if(!id) {\r\n            idErr.idField = \"Enter Valid ID\"\r\n            isValid = false\r\n        }\r\n        if(!amount) {\r\n            amountErr.amountField = \"Enter Amount\"\r\n            isValid = false\r\n        }\r\n        if(!date) {\r\n            dateErr.dateField = \"Enter Date\"\r\n            isValid = false\r\n        }\r\n        if(!comment) {\r\n            commentErr.commentField = \"Enter ID\"\r\n            isValid = false\r\n        }\r\n\r\n        setIdErr(idErr);\r\n        setDateErr(dateErr);\r\n        setAmountErr(amountErr);\r\n        setCommentErr(commentErr);\r\n        return isValid;\r\n    }\r\n\r\n    function SubmitButton() {\r\n        if (amount && date && id && comment ) {\r\n            return <div>\r\n                <Button onClick={depositAPI } type=\"submit\">\r\n            Deposit\r\n        </Button>\r\n        \r\n            </div>\r\n        } else {\r\n            return <Button onClick={depositAPI} type=\"submit\" disabled>\r\n            Deposit\r\n        </Button>\r\n        }\r\n    }\r\n\r\n    const depositAPI =()=> {\r\n        axios.post(\"http://localhost:8000/deposit\", {\r\n            id: id,\r\n            money: amount,\r\n            date: date,\r\n            comment: comment\r\n        })\r\n        window.location.replace('http://localhost:3000/deposit')\r\n        .then((response) => {\r\n            \r\n            console.log(response)\r\n        }).catch(error=> {\r\n            setErrorMessage('error')\r\n        }) \r\n        \r\n    }\r\n\r\n    useEffect(()=> {\r\n        fetchUserBal()\r\n    },[])\r\n\r\n    const fetchUserBal = () => {\r\n    const headers = {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer lll`,\r\n            \"Access-Control-Allow-Origin\":\"*\"\r\n        }\r\n        console.log(balance);\r\n        axios.get(`${APPCONFIG.appapi}/userbalance/${balance}`, {\r\n            headers\r\n        }).then((data) => {\r\n           \r\n         setFetchBalance(data.data[0]);\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        })\r\n\r\n\r\n    }\r\n\r\n\r\n    const Change =()=> {\r\n        setAmount('');\r\n        setID('');\r\n        setDate('');\r\n        setComment('');\r\n    }\r\n\r\n    const reset =()=> {\r\n        setBalance('')\r\n    }\r\n    const togglePopup =()=> {\r\n        setIsOpen(!isOpen);\r\n    }\r\n    const configWrap = {\r\n        head: 'Get Student Balance'\r\n    }\r\n\r\n    const configWraps = {\r\n        head: 'Amount to deposit'\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Helmet>\r\n                    <title>TAS Smart Card | Deposit Page</title>\r\n                </Helmet>\r\n                <h1 style={{textAlign:\"center\"}}>Deposit/Balance Page</h1>\r\n                <FormWrapper {...configWrap}>\r\n                    <form onSubmit={handleSubmits}>\r\n                    <FormInput \r\n                    type=\"text\"\r\n                    name=\"balance\"\r\n                    value={balance}\r\n                    placeholder=\"Enter ID\"\r\n                    handleChange={e=> setBalance(e.target.value)}\r\n                    />\r\n                    <Button onClick={fetchUserBal} type=\"submit\">\r\n                        Submit\r\n                    </Button>\r\n                    <br />\r\n                    <h3>{fetchBalance.fname} {fetchBalance.lname} Balance is <Naira>{fetchBalance.money}</Naira></h3>\r\n                    </form>\r\n\r\n                </FormWrapper>\r\n                \r\n                \r\n                <FormWrapper {...configWraps}>\r\n                    \r\n                {errorMessage=='success'?<ErrorSucc /> : null }\r\n                {errorMessage=='error'?<ErrorFail /> : null }\r\n                    <form onSubmit={handleSubmit}>\r\n\r\n                        <FormInput\r\n                        required\r\n                        type=\"text\"\r\n                        name=\"id\"\r\n                        value={id}\r\n                        placeholder=\"ID\"\r\n                        handleChange={e => setID(e.target.value) }\r\n                        />\r\n                        {Object.keys(idErr).map((key)=> {\r\n                            return <div style={{ fontSize: 12, color: \"red\"}}>{idErr[key]}</div>\r\n                        })}\r\n\r\n\r\n                        <FormInput\r\n                        required\r\n                        type=\"text\"\r\n                        name=\"amount\"\r\n                        value={amount}\r\n                        placeholder=\"Amount\"\r\n                        handleChange={e => setAmount(e.target.value) }\r\n                        />\r\n                        {Object.keys(amountErr).map((key)=> {\r\n                            return <div style={{ fontSize: 12, color: \"red\"}}>{amountErr[key]}</div>\r\n                        })}\r\n\r\n                        <FormInput\r\n                        required\r\n                        type=\"text\"\r\n                        name=\"date\"\r\n                        value={date}\r\n                        placeholder=\"Date (DD/MM/YYYY)\"\r\n                        handleChange={e => setDate(e.target.value) }\r\n                        />\r\n                        {Object.keys(dateErr).map((key)=> {\r\n                            return <div style={{ fontSize: 12, color: \"red\"}}>{dateErr[key]}</div>\r\n                        })}\r\n\r\n                        <FormInput\r\n                        required\r\n                        type=\"text\"\r\n                        name=\"comment\"\r\n                        value={comment}\r\n                        placeholder=\"Comment\"\r\n                        handleChange={e => setComment(e.target.value) }\r\n                        />      \r\n                        {Object.keys(commentErr).map((key)=> {\r\n                            return <div style={{ fontSize: 12, color: \"red\"}}>{commentErr[key]}</div>\r\n                        })}\r\n                        <SubmitButton />\r\n\r\n                        {isOpen && <Popup \r\n                         content={\r\n                             <>\r\n                                <h3>Are you sure of the amount? N{amount}</h3>\r\n                                <Button onClick={depositAPI}>Confirm Deposit</Button>\r\n                             </>\r\n                         }\r\n                         handleClose={togglePopup}\r\n                        />}\r\n                        <div><h3 style={{color: 'green'}}>{msg} </h3></div>\r\n                    </form>\r\n                </FormWrapper>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Deposit;","C:\\Users\\dare\\tac-payment-system\\src\\components\\popup\\index.js",[],"C:\\Users\\dare\\tac-payment-system\\src\\pages\\transactionHistory\\index.js",[],"C:\\Users\\dare\\tac-payment-system\\src\\components\\transactionHistory\\index.js",["265","266","267"],"import React, {useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport axios from 'axios';\r\nimport { Helmet } from 'react-helmet'\r\nimport './index.scss'\r\nimport { APPCONFIG } from './../../config/config'\r\nimport moment from 'moment';\r\nimport {\r\n    TableContainer, Table, TableHead,\r\n    TableRow, TableBody, TableCell, Paper, makeStyles\r\n  } from '@material-ui/core';\r\nimport JwPagination from 'jw-react-pagination';\r\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\r\nimport FormInput from '../forms/FornInput/formInput';\r\n//import CheckBal from '../../pages/checkBalance/checkBalance'\r\n\r\nconst TransHistory =(props)=> {\r\n\r\n    const [userTrans, setUserTrans] = useState([])\r\n    const [page, setPage] = useState(1);\r\n    const [search, setSearch] = useState('');\r\n    \r\n    useEffect(() => {\r\n       \r\n         fetchTrasactionsHistory()  \r\n          \r\n      },[setUserTrans]);\r\n\r\n      const fetchANew = (add)=>{\r\n        let newpage = add?page+1:page-1;\r\n         setPage(newpage);\r\n      }\r\n\r\n      const handleChange = event => {\r\n        setSearch(event.target.value);\r\n      };\r\n      useEffect(() => {\r\n        getCharacter()\r\n        if (search && search.length > 1) {\r\n            if (search.length % 2 === 0) {\r\n                getCharacter();\r\n            } \r\n        } \r\n      }, [search]);\r\n\r\n      const getCharacter =()=> {\r\n        const results = userTrans.filter( userTrans =>\r\n            userTrans.time.toLowerCase().includes(search.toLowerCase()) \r\n          );\r\n          setUserTrans(results);\r\n      }\r\n\r\n      const useStyles = makeStyles({\r\n        table: {\r\n        },\r\n      });\r\n\r\n      const stylesHead = {\r\n        fontSize: '20px',\r\n        cursor: 'pointer',\r\n        width: '15%',\r\n        fontWeight: '500',\r\n        textTransform: 'uppercase',\r\n        padding: '4px 4px'\r\n      };\r\n\r\n      const stylesBody = {\r\n        fontSize: '15px',\r\n        cursor: 'pointer',\r\n        width: '15%',\r\n        fontWeight: '400',\r\n        padding: '4px 4px'\r\n      };\r\n      \r\n\r\n    const fetchTrasactionsHistory =()=> {\r\n        console.log('Transaction fetched!')\r\n        const headers = {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer lll`,\r\n                \"Access-Control-Allow-Origin\":\"*\"\r\n            }\r\n    console.log(page,'here')\r\n            axios.get(`${APPCONFIG.appapi}/usertransactions?page=1`, {\r\n                headers\r\n            }).then((data) => {\r\n               \r\n                setUserTrans(data.data);\r\n            }).catch((error) => {\r\n                console.log(error);\r\n            })\r\n    \r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <div>\r\n                {/*<CheckBal /> */}\r\n                <Helmet>\r\n                  <title>TAS Smart Card | Transaction History</title>\r\n               </Helmet>\r\n                <h1> Transaction History</h1>\r\n                <ReactHTMLTableToExcel\r\n                    id=\"test-table-xls-button\"\r\n                    className=\"download-table-xls-button\"\r\n                    table=\"table-to-xls\"\r\n                    filename=\"Transaction History XLS\"\r\n                    sheet=\"tablexls\"\r\n                    buttonText=\"Download as XLS\"/>\r\n                    <div>\r\n                        <FormInput\r\n                        name=\"search\"\r\n                        value={search || \"\"}\r\n                        placeholder=\"Search box\"\r\n                        handleChange={handleChange}\r\n                        />\r\n                    </div>\r\n                <div>\r\n                <TableContainer component={Paper}>\r\n                    <Table className={useStyles.table}>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell style={stylesHead}>Transaction ID</TableCell>\r\n                                <TableCell style={stylesHead}>Student ID</TableCell>\r\n                                <TableCell style={stylesHead}>Amount</TableCell>\r\n                                <TableCell style={stylesHead}>Tag ID</TableCell>\r\n                                <TableCell style={stylesHead}>Date</TableCell>\r\n                                <TableCell style={stylesHead}>Location</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {userTrans.map((data, i) => {\r\n                             return (\r\n                                <TableRow key={i}>\r\n                                    <TableCell style={stylesBody}>{data.transactionid}</TableCell>\r\n                                    <TableCell style={stylesBody}>{data.id}</TableCell>\r\n                                    <TableCell style={stylesBody}>{data.amount}</TableCell>\r\n                                    <TableCell style={stylesBody}>{data.tagid}</TableCell>\r\n                                    <TableCell style={stylesBody}>{moment(data.time).format('DD/MM/YYYY')}</TableCell>\r\n                                    <TableCell style={stylesBody}>{data.location}</TableCell>\r\n                                </TableRow>\r\n                            )})}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n\r\n                \r\n  <JwPagination items={userTrans} onChangePage={ fetchANew} /> \r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TransHistory;","C:\\Users\\dare\\tac-payment-system\\src\\components\\forms\\FormSelect\\index.js",[],"C:\\Users\\dare\\tac-payment-system\\src\\config\\config.js",[],"C:\\Users\\dare\\tac-payment-system\\src\\layouts\\studentLay\\index.js",[],"C:\\Users\\dare\\tac-payment-system\\src\\pages\\dashboard\\dashboard.js",[],"C:\\Users\\dare\\tac-payment-system\\src\\pages\\depositHis\\index.js",[],"C:\\Users\\dare\\tac-payment-system\\src\\components\\userDeposit\\index.js",["268","269"],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { APPCONFIG} from './../../config/config'\r\nimport {\r\n    TableContainer, Table, TableHead,\r\n    TableRow, TableBody, TableCell, makeStyles\r\n  } from '@material-ui/core';\r\n  import Paper from '@material-ui/core/Paper';\r\nimport './index.scss'\r\n\r\n\r\nconst DepositHistory =()=> {\r\n    //const history = useHistory();\r\n    const [deposit, setDeposit] = useState([])\r\n    const [userDeposit, setUserDeposit] = useState({})\r\n\r\n    useEffect(() => {\r\n        fetchDepositHistory()\r\n    }, []);\r\n\r\n    const fetchDepositHistory =()=> {\r\n        let data = localStorage.getItem('userdata')\r\n\r\n        if (!data) {\r\n            \r\n        }\r\n        else{\r\n            data=JSON.parse(data);\r\n            //history.push('/admin')\r\n           \r\n        setUserDeposit(data);\r\n        }\r\n        axios.get(`${APPCONFIG.appapi}/userdeposit?id=${data.id}`)\r\n        .then((data)=> {\r\n            setDeposit(data.data)\r\n        })\r\n        .catch((error)=> {\r\n            console.log(error)\r\n        })\r\n    \r\n    }\r\n\r\n    const useStyles = makeStyles({\r\n        table: {\r\n        },\r\n      });\r\n\r\n      const stylesHead = {\r\n        fontSize: '20px',\r\n        cursor: 'pointer',\r\n        width: '15%',\r\n        fontWeight: '500',\r\n        textTransform: 'uppercase',\r\n        padding: '4px 4px'\r\n      };\r\n\r\n      const stylesBody = {\r\n        fontSize: '15px',\r\n        cursor: 'pointer',\r\n        width: '15%',\r\n        fontWeight: '400',\r\n        padding: '4px 4px'\r\n      };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Deposit History</h2>\r\n            <div>\r\n                <TableContainer component={Paper}>\r\n                <Table id=\"table-to-xls\" className={useStyles.table}>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell style={stylesHead}># </TableCell>\r\n                            <TableCell style={stylesHead}>Amount </TableCell>\r\n                            <TableCell style={stylesHead}>Date </TableCell>\r\n                            <TableCell style={stylesHead}>Location </TableCell>\r\n                            {/* <TableCell style={stylesHead}>Action </TableCell> */}\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                    \r\n                        {deposit.map((data, i)=> (\r\n                            \r\n                            <TableRow className=\"linkss\" key={i}>\r\n                                <TableCell style={stylesBody}>{i + 1}</TableCell>\r\n                                <TableCell style={stylesBody}>{data.money}</TableCell>\r\n                                <TableCell style={stylesBody}>{data.date}</TableCell>\r\n                                <TableCell style={stylesBody}>{data.comment}</TableCell>\r\n                                {/* <TableCell style={stylesBody}><TableButton onClick={()=>{\r\n                                                handleClick(data.id)\r\n                                }}> Edit</TableButton> </TableCell> */}\r\n                            </TableRow>\r\n                           \r\n                        ))}\r\n                        \r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n                </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DepositHistory;","C:\\Users\\dare\\tac-payment-system\\src\\components\\deposit\\error.js",[],"C:\\Users\\dare\\tac-payment-system\\src\\components\\deposit\\errorSucc.js",[],"C:\\Users\\dare\\tac-payment-system\\src\\pages\\DeleteUserPage\\index.js",[],"C:\\Users\\dare\\tac-payment-system\\src\\components\\deleteUser\\index.js",[],"C:\\Users\\dare\\tac-payment-system\\src\\pages\\userTrans\\index.js",[],"C:\\Users\\dare\\tac-payment-system\\src\\components\\userTransaction\\index.js",["270","271"],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport {APPCONFIG} from './../../config/config';\r\nimport {\r\n    TableContainer, Table, TableHead,\r\n    TableRow, TableBody, TableCell, makeStyles\r\n  } from '@material-ui/core';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\r\nimport moment from 'moment';\r\nimport './index.scss'\r\n\r\nconst UserTransaction =()=> {\r\n\r\n    const [trans, setTrans] = useState([]);\r\n    const [userTrans, setUserTrans] = useState({})\r\n\r\n    useEffect(()=> {\r\n        fetchTransactions()\r\n    },[])\r\n\r\n    const fetchTransactions=()=> {\r\n        let data = localStorage.getItem('userdata')\r\n\r\n        if (!data) {\r\n            \r\n        }\r\n        else{\r\n            data=JSON.parse(data);\r\n            //history.push('/admin')\r\n           \r\n            setUserTrans(data);\r\n        }\r\n        console.log(data.id)\r\n        axios.get(`${APPCONFIG.appapi}/usertrans?id=${data.id}`, {\r\n            \r\n        }).then((data) => {\r\n           \r\n         setTrans(data.data);\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    const useStyles = makeStyles({\r\n        table: {\r\n        },\r\n      });\r\n\r\n      const stylesHead = {\r\n        fontSize: '20px',\r\n        cursor: 'pointer',\r\n        width: '15%',\r\n        fontWeight: '500',\r\n        textTransform: 'uppercase',\r\n        padding: '4px 4px'\r\n      };\r\n\r\n      const stylesBody = {\r\n        fontSize: '15px',\r\n        cursor: 'pointer',\r\n        width: '15%',\r\n        fontWeight: '400',\r\n        padding: '4px 4px'\r\n      };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Transaction History</h1>\r\n            \r\n            \r\n            <div>\r\n                <TableContainer component={Paper}>\r\n                <Table id=\"table-to-xls\" className={useStyles.table}>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell style={stylesHead}># </TableCell>\r\n                            <TableCell style={stylesHead}>Amount </TableCell>\r\n                            <TableCell style={stylesHead}>Date </TableCell>\r\n                            <TableCell style={stylesHead}>Location </TableCell>\r\n                            {/* <TableCell style={stylesHead}>Action </TableCell> */}\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                    \r\n                        {trans.map((data, i)=> (\r\n                            \r\n                            <TableRow className=\"linkss\" key={i}>\r\n                                <TableCell style={stylesBody}>{i + 1}</TableCell>\r\n                                <TableCell style={stylesBody}>{data.amount}</TableCell>\r\n                                <TableCell style={stylesBody}>{moment(data.time).format('YYYY-MM-DD')}</TableCell>\r\n                                <TableCell style={stylesBody}>{data.location}</TableCell>\r\n                                {/* <TableCell style={stylesBody}><TableButton onClick={()=>{\r\n                                                handleClick(data.id)\r\n                                }}> Edit</TableButton> </TableCell> */}\r\n                            </TableRow>\r\n                           \r\n                        ))}\r\n                        \r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n                </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserTransaction;\r\n","C:\\Users\\dare\\tac-payment-system\\src\\pages\\AdminDepositHis\\index.js",[],"C:\\Users\\dare\\tac-payment-system\\src\\components\\adminDepositHis\\index.js",[],"C:\\Users\\dare\\tac-payment-system\\src\\components\\modal\\index.js",[],"C:\\Users\\dare\\tac-payment-system\\src\\pages\\updateUserPage\\index.js",[],"C:\\Users\\dare\\tac-payment-system\\src\\components\\updateUser\\index.js",["272"],"import React, { useEffect, useState } from 'react';\r\nimport Button from '../forms/Buttons';\r\nimport FormInput from '../forms/FornInput/formInput';\r\nimport axios from 'axios';\r\nimport './index.scss';\r\nimport { useParams } from 'react-router';\r\nimport { APPCONFIG } from '../../config/config';\r\nimport FormWrapper from '../formWrapper';\r\n\r\nconst UpdateUser =()=> {\r\n    \r\n    const [student, setStudent] = useState([]);\r\n    const [update, setUpdate] = useState('');\r\n\r\n    const handleSubmit =(e)=> {\r\n        e.preventDefault();\r\n    }\r\n\r\n    let {id} = useParams();\r\n\r\n    useEffect(()=> {\r\n        fetchUser()\r\n    },[]);\r\n\r\n    const handleChange = e => {\r\n        const {name, value} = e.target;\r\n        setStudent({...student, [name]: value});\r\n    }\r\n\r\n    const fetchUser =()=> {\r\n\r\n        const headers = {\r\n            'Content-Type': 'application/json',\r\n            Authorization : 'Bearer 111',\r\n            'Access-Control-Allow-Origin' : '*'\r\n        }\r\n        console.log(student.id)\r\n        axios.get(`${APPCONFIG.appapi}/fetchstudent/${id}`, {\r\n            headers\r\n        })\r\n        .then((data, response)=> {\r\n            setStudent(data.data[0])\r\n        })\r\n        .catch((error)=> {\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    const headline= {\r\n        head: \"Update Student Info\"\r\n    }\r\n\r\n    const updateStudent=()=> {\r\n\r\n        axios.put(`http://localhost:8000/updateuser/${id}`, {\r\n            id: student.id,\r\n            tagid: student.tagid,\r\n            fname: student.fname,\r\n            lname: student.lname,\r\n            pin: student.pin,\r\n            money: student.money,\r\n            password: student.password,\r\n            active: student.active,\r\n            email: student.email\r\n        })\r\n        setUpdate('Record updated successfully')\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <h1>Update Student Page</h1>\r\n            <div>\r\n                <FormWrapper {...headline}>\r\n                <form onSubmit={handleSubmit}>\r\n                <FormInput\r\n                    name=\"tagid\"\r\n                    type=\"hidden\"\r\n                    value={student.id}\r\n                    />\r\n                    <label>Tag ID</label>\r\n                    <FormInput\r\n                    name=\"tagid\"\r\n                    type=\"text\"\r\n                    value={student.tagid}\r\n                    handleChange={handleChange}\r\n                    />\r\n                    <label>Firstname</label>\r\n                    <FormInput\r\n                    name=\"firstname\"\r\n                    type=\"text\"\r\n                    placeholder=\"Fname\"\r\n                    value={student.fname}\r\n                    handleChange={handleChange}\r\n                    />\r\n                    <label>Lastname</label>\r\n                    <FormInput\r\n                    name=\"surname\"\r\n                    type=\"text\"\r\n                    placeholder=\"Lname\"\r\n                    value={student.lname}\r\n                    handleChange={handleChange}\r\n                    />\r\n                    <label>Pin</label>\r\n                    <FormInput\r\n                    name=\"pin\"\r\n                    type=\"text\"\r\n                    placeholder=\"Pin\"\r\n                    value={student.pin}\r\n                    handleChange={handleChange}\r\n                    />\r\n                    <label>Amount</label>\r\n                    <FormInput\r\n                    name=\"amount\"\r\n                    type=\"text\"\r\n                    placeholder=\"Money\"\r\n                    value={student.money}\r\n                    handleChange={handleChange}\r\n                    />\r\n                    <label>Password</label>\r\n                    <FormInput\r\n                    name=\"password\"\r\n                    type=\"text\"\r\n                    placeholder=\"Password\"\r\n                    value={student.password}\r\n                    handleChange={handleChange}\r\n                    />\r\n                    <label>Active</label>\r\n                    <FormInput\r\n                    name=\"active\"\r\n                    type=\"text\"\r\n                    placeholder=\"Active\"\r\n                    value={student.active}\r\n                    handleChange={handleChange}\r\n                    />\r\n                    <label>Email</label>\r\n                    <FormInput\r\n                    name=\"email\"\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    value={student.email}\r\n                    handleChange={handleChange}\r\n                    />\r\n                    <p style={{color: 'green'}}>{update}</p>\r\n                    <Button type=\"submit\" onClick={()=> {\r\n                        updateStudent(student.id)\r\n                    }}>\r\n                        Update\r\n                    </Button>\r\n                </form>\r\n                </FormWrapper>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UpdateUser;",{"ruleId":"273","replacedBy":"274"},{"ruleId":"275","replacedBy":"276"},{"ruleId":"277","severity":1,"message":"278","line":2,"column":8,"nodeType":"279","messageId":"280","endLine":2,"endColumn":15},{"ruleId":"277","severity":1,"message":"281","line":8,"column":8,"nodeType":"279","messageId":"280","endLine":8,"endColumn":17},{"ruleId":"273","replacedBy":"282"},{"ruleId":"275","replacedBy":"283"},{"ruleId":"273","replacedBy":"284"},{"ruleId":"275","replacedBy":"285"},{"ruleId":"277","severity":1,"message":"286","line":3,"column":8,"nodeType":"279","messageId":"280","endLine":3,"endColumn":14},{"ruleId":"277","severity":1,"message":"287","line":7,"column":19,"nodeType":"279","messageId":"280","endLine":7,"endColumn":30},{"ruleId":"288","severity":1,"message":"289","line":20,"column":7,"nodeType":"290","endLine":20,"endColumn":9,"suggestions":"291"},{"ruleId":"277","severity":1,"message":"292","line":22,"column":11,"nodeType":"279","messageId":"280","endLine":22,"endColumn":23},{"ruleId":"277","severity":1,"message":"293","line":11,"column":8,"nodeType":"279","messageId":"280","endLine":11,"endColumn":20},{"ruleId":"288","severity":1,"message":"294","line":69,"column":10,"nodeType":"290","endLine":69,"endColumn":18,"suggestions":"295"},{"ruleId":"296","severity":1,"message":"297","line":38,"column":51,"nodeType":"298","messageId":"299","endLine":38,"endColumn":53},{"ruleId":"296","severity":1,"message":"297","line":41,"column":43,"nodeType":"298","messageId":"299","endLine":41,"endColumn":45},{"ruleId":"273","replacedBy":"300"},{"ruleId":"275","replacedBy":"301"},{"ruleId":"296","severity":1,"message":"297","line":40,"column":30,"nodeType":"298","messageId":"299","endLine":40,"endColumn":32},{"ruleId":"277","severity":1,"message":"302","line":16,"column":10,"nodeType":"279","messageId":"280","endLine":16,"endColumn":14},{"ruleId":"277","severity":1,"message":"303","line":30,"column":20,"nodeType":"279","messageId":"280","endLine":30,"endColumn":29},{"ruleId":"277","severity":1,"message":"304","line":9,"column":10,"nodeType":"279","messageId":"280","endLine":9,"endColumn":18},{"ruleId":"277","severity":1,"message":"305","line":10,"column":10,"nodeType":"279","messageId":"280","endLine":10,"endColumn":18},{"ruleId":"277","severity":1,"message":"306","line":10,"column":20,"nodeType":"279","messageId":"280","endLine":10,"endColumn":31},{"ruleId":"277","severity":1,"message":"307","line":45,"column":11,"nodeType":"279","messageId":"280","endLine":45,"endColumn":15},{"ruleId":"277","severity":1,"message":"308","line":46,"column":13,"nodeType":"279","messageId":"280","endLine":46,"endColumn":17},{"ruleId":"277","severity":1,"message":"309","line":19,"column":12,"nodeType":"279","messageId":"280","endLine":19,"endColumn":18},{"ruleId":"277","severity":1,"message":"303","line":19,"column":20,"nodeType":"279","messageId":"280","endLine":19,"endColumn":29},{"ruleId":"277","severity":1,"message":"310","line":28,"column":17,"nodeType":"279","messageId":"280","endLine":28,"endColumn":23},{"ruleId":"288","severity":1,"message":"311","line":47,"column":8,"nodeType":"290","endLine":47,"endColumn":10,"suggestions":"312"},{"ruleId":"288","severity":1,"message":"313","line":114,"column":7,"nodeType":"290","endLine":114,"endColumn":9,"suggestions":"314"},{"ruleId":"296","severity":1,"message":"297","line":185,"column":30,"nodeType":"298","messageId":"299","endLine":185,"endColumn":32},{"ruleId":"296","severity":1,"message":"297","line":186,"column":30,"nodeType":"298","messageId":"299","endLine":186,"endColumn":32},{"ruleId":"277","severity":1,"message":"315","line":2,"column":10,"nodeType":"279","messageId":"280","endLine":2,"endColumn":20},{"ruleId":"288","severity":1,"message":"316","line":27,"column":9,"nodeType":"290","endLine":27,"endColumn":23,"suggestions":"317"},{"ruleId":"288","severity":1,"message":"294","line":44,"column":10,"nodeType":"290","endLine":44,"endColumn":18,"suggestions":"318"},{"ruleId":"277","severity":1,"message":"315","line":3,"column":10,"nodeType":"279","messageId":"280","endLine":3,"endColumn":20},{"ruleId":"277","severity":1,"message":"319","line":16,"column":12,"nodeType":"279","messageId":"280","endLine":16,"endColumn":23},{"ruleId":"277","severity":1,"message":"320","line":9,"column":8,"nodeType":"279","messageId":"280","endLine":9,"endColumn":29},{"ruleId":"277","severity":1,"message":"321","line":16,"column":12,"nodeType":"279","messageId":"280","endLine":16,"endColumn":21},{"ruleId":"288","severity":1,"message":"322","line":23,"column":7,"nodeType":"290","endLine":23,"endColumn":9,"suggestions":"323"},"no-native-reassign",["324"],"no-negated-in-lhs",["325"],"no-unused-vars","'MainLay' is defined but never used.","Identifier","unusedVar","'LoginForm' is defined but never used.",["324"],["325"],["324"],["325"],"'Footer' is defined but never used.","'setUserdata' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userdata'. Either include it or remove the dependency array.","ArrayExpression",["326"],"'handleChange' is assigned a value but never used.","'JwPagination' is defined but never used.","React Hook useEffect has a missing dependency: 'getCharacter'. Either include it or remove the dependency array.",["327"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["324"],["325"],"'Link' is defined but never used.","'setErrors' is assigned a value but never used.","'userdata' is assigned a value but never used.","'homepage' is assigned a value but never used.","'setHomepage' is assigned a value but never used.","'home' is assigned a value but never used.","'data' is assigned a value but never used.","'errors' is assigned a value but never used.","'setMsg' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'depositAPI'. Either include it or remove the dependency array.",["328"],"React Hook useEffect has a missing dependency: 'fetchUserBal'. Either include it or remove the dependency array.",["329"],"'useHistory' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchTrasactionsHistory'. Either include it or remove the dependency array.",["330"],["331"],"'userDeposit' is assigned a value but never used.","'ReactHTMLTableToExcel' is defined but never used.","'userTrans' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchUser'. Either include it or remove the dependency array.",["332"],"no-global-assign","no-unsafe-negation",{"desc":"333","fix":"334"},{"desc":"335","fix":"336"},{"desc":"337","fix":"338"},{"desc":"339","fix":"340"},{"desc":"341","fix":"342"},{"desc":"335","fix":"343"},{"desc":"344","fix":"345"},"Update the dependencies array to be: [userdata]",{"range":"346","text":"347"},"Update the dependencies array to be: [getCharacter, search]",{"range":"348","text":"349"},"Update the dependencies array to be: [depositAPI]",{"range":"350","text":"351"},"Update the dependencies array to be: [fetchUserBal]",{"range":"352","text":"353"},"Update the dependencies array to be: [fetchTrasactionsHistory, setUserTrans]",{"range":"354","text":"355"},{"range":"356","text":"349"},"Update the dependencies array to be: [fetchUser]",{"range":"357","text":"358"},[505,507],"[userdata]",[1933,1941],"[getCharacter, search]",[1555,1557],"[depositAPI]",[3233,3235],"[fetchUserBal]",[910,924],"[fetchTrasactionsHistory, setUserTrans]",[1341,1349],[619,621],"[fetchUser]"]